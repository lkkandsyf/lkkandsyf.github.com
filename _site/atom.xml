<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>既生而为人，就要承担，安然接受人生可能发生的一切。</title>
 <link href="http://lkkandsyf.github.io/atom.xml" rel="self"/>
 <link href="http://lkkandsyf.github.io"/>
 <updated>2017-04-10T11:08:04+08:00</updated>
 <id>http://lkkandsyf.github.io</id>
 <author>
   <name>kangkangliang</name>
   <email>lkkforworld@gmail.com</email>
 </author>

 
 <entry>
   <title>Build Blog</title>
   <link href="http://lkkandsyf.github.io/blog/2017/04/09/build-blog"/>
   <updated>2017-04-09T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/blog/2017/04/09/build-blog</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;使用ubuntu镜像来搭建一个jekyll的博客环境&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#install-env&quot; id=&quot;markdown-toc-install-env&quot;&gt;install env&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install-env&quot;&gt;install env&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;gt; 1. 进入docker
 sudo docker run -it ubuntu:14.04 /bin/bash
 apt-get update
 # solution add repo
 apt-get install python-software-properties
 apt-get install software-properties-common
 # add ruby repo
 apt-add-repository ppa:brightbox/ruby-ng
 apt-get update
 apt-get install ruby2.2-dev
 # check version
 ruby -v # 2.2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;problem:&lt;code class=&quot;highlighter-rouge&quot;&gt;An error occurred while installing json (1.8.6), and Bundler cannot continue. on Ubuntu
&lt;/code&gt;
solution:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install libgmp-dev
sudo apt-get install libgmp3-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Centos</title>
   <link href="http://lkkandsyf.github.io/linux/2017/03/27/centos"/>
   <updated>2017-03-27T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/linux/2017/03/27/centos</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;这里收集了关于centos学习过程中自己的收获，方便以后使用&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#安装完成之后需要哪些事&quot; id=&quot;markdown-toc-安装完成之后需要哪些事&quot;&gt;&lt;strong&gt;安装完成之后，需要哪些事&lt;/strong&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#sudo-problem&quot; id=&quot;markdown-toc-sudo-problem&quot;&gt;sudo problem&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#network-problem&quot; id=&quot;markdown-toc-network-problem&quot;&gt;network problem&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#yum-source&quot; id=&quot;markdown-toc-yum-source&quot;&gt;yum source&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chrome&quot; id=&quot;markdown-toc-chrome&quot;&gt;chrome&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#centoscn&quot; id=&quot;markdown-toc-centoscn&quot;&gt;centoscn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;安装完成之后需要哪些事&quot;&gt;&lt;strong&gt;安装完成之后，需要哪些事&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&quot;sudo-problem&quot;&gt;sudo problem&lt;/h3&gt;

&lt;p&gt;open terminal&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# change to root
visudo #open sudos
# add username by the root
root ALL=(ALL) ALL
username ALL=(ALL) ALL
:wq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;network-problem&quot;&gt;network problem&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# change to root
cd /etc/sysconfig/network-scripts/
# ls and find network card
vim ifcfg-xxxx	#edit
# ONBOOT=no change to ONBOOT=yes
:wq

# restart network
service network restart
ping baidu.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;yum-source&quot;&gt;yum source&lt;/h3&gt;

&lt;p&gt;please see.&lt;a href=&quot;http://mirrors.163.com/&quot;&gt;mirrors.163.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;local source:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mchina/archive/2013/01/04/2842275.html&quot;&gt;http://www.cnblogs.com/mchina/archive/2013/01/04/2842275.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.centoscn.com/CentOS/2015/0212/4696.html&quot;&gt;http://www.centoscn.com/CentOS/2015/0212/4696.html&lt;/a&gt;
&lt;a href=&quot;http://www.centoscn.com/CentOS/config/2015/0408/5114.html&quot;&gt;http://www.centoscn.com/CentOS/config/2015/0408/5114.html&lt;/a&gt;
&lt;a href=&quot;http://www.centoscn.com/CentOS/config/2015/0416/5189.html&quot;&gt;http://www.centoscn.com/CentOS/config/2015/0416/5189.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;chrome&quot;&gt;chrome&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://chrome.richardlloyd.org.uk/install_chrome.sh
sudo bash install_chrome.sh -s	#stable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;pinyin&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;1 google-pinyin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;2 sun-pinyin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;3 sogoupinyin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum repolist
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;centoscn&quot;&gt;centoscn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.centoscn.com/&quot;&gt;http://www.centoscn.com/&lt;/a&gt;
&lt;a href=&quot;http://blog.csdn.net/wuxuguang123/article/details/9713469&quot;&gt;vbox rehancement centos&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>R</title>
   <link href="http://lkkandsyf.github.io/2017/03/27/R"/>
   <updated>2017-03-27T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/2017/03/27/R</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#install&quot; id=&quot;markdown-toc-install&quot;&gt;install&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#demo&quot; id=&quot;markdown-toc-demo&quot;&gt;demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install&quot;&gt;install&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://mirror.bjtu.edu.cn/cran/bin/linux/ubuntu/README.html&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;demo&quot;&gt;demo&lt;/h2&gt;

&lt;p&gt;R-demo.R&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;age &amp;lt;- c(4,4,5,5,6,6,7,7,8,8)
height &amp;lt;- c(95,97,106,108,114,116,120,121,126,125)
mean(height)
sd(height)
cor(age,height)
plot(age,height)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;run: R CMD batch  –args R-demo.R&lt;/p&gt;

&lt;p&gt;produce pdf file&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Hexo</title>
   <link href="http://lkkandsyf.github.io/blog/2017/03/22/hexo"/>
   <updated>2017-03-22T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/blog/2017/03/22/hexo</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;usage hexo&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#install&quot; id=&quot;markdown-toc-install&quot;&gt;Install&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#command&quot; id=&quot;markdown-toc-command&quot;&gt;Command&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install&quot;&gt;Install&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# nodejs
sudo add-apt-repository ppa:chris-lea/node.js
sudo apt-get update
sudo apt-get install nodejs
# git
sudo apt-get install git
# hexo
sudo npm install hexo -g

# init blog dir
hexo init &amp;lt;dir&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;博客发布到git&lt;a href=&quot;https://hexo.io/docs/deployment.html&quot;&gt;https://hexo.io/docs/deployment.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;配置_config.yml&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Deployment
## Docs: http://hexo.io/docs/deployment.html
deploy:
  type: git
  repo: git@github.com:lkkandsyf/hexo/blog
  branch:master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;command&quot;&gt;Command&lt;/h2&gt;

&lt;p&gt;创建页面:hexo new post “文章名字(中文也可以)”&lt;/p&gt;

&lt;p&gt;生成html:hexo generate(hexo g)&lt;/p&gt;

&lt;p&gt;发布到git:hexo deploy&lt;/p&gt;

&lt;p&gt;生成并发布:hexo generate -d(hexo g -d)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Dl4j</title>
   <link href="http://lkkandsyf.github.io/deep%20learning/2017/02/22/DL4J"/>
   <updated>2017-02-22T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/deep%20learning/2017/02/22/DL4J</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://deeplearning4j.org/&quot;&gt;DL4J&lt;/a&gt;这是Java写的深度学习库。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#&quot; id=&quot;markdown-toc-&quot;&gt;#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;#&lt;/h1&gt;
</content>
 </entry>
 
 <entry>
   <title>Java Scala Error Collect</title>
   <link href="http://lkkandsyf.github.io/javaerror/2017/02/17/Java-Scala-Error-Collect"/>
   <updated>2017-02-17T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/javaerror/2017/02/17/Java-Scala-Error-Collect</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;这里整理自己学习Java过程中遇到的一些问题，简单记录下来，方便以后查看。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#编译错误&quot; id=&quot;markdown-toc-编译错误&quot;&gt;编译错误&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;编译错误&quot;&gt;编译错误&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;P1&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.10:test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/13170860/failed-to-execute-goal-org-apache-maven-pluginsmaven-surefire-plugin2-10test&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Solution&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Update the Maven project:&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.Right-click on &quot;project&quot;
2.Go to &quot;Maven&quot; &amp;gt;&amp;gt; &quot;Update&quot;
3.Wait for all the changes to be applied
4.Commit the changes (if code is on repo)
5.Run
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or:&lt;/p&gt;

&lt;p&gt;In my application, certain unit tests were not compatible with Java 8 so they were failing. The build would succeed with &lt;code class=&quot;highlighter-rouge&quot;&gt;mvn clean install -DskipTests &lt;/code&gt;but it is not recommended to skip the unit test.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P2&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;NoClassDefFoundError: scala/collection/Seq
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/33885339/noclassdeffounderror-scala-collection-seq&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Solution&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;It happened because my java code was build with Scala, but at runtime scala library wasn’t available. &lt;code class=&quot;highlighter-rouge&quot;&gt;Added scala-library.jar to classpath'&lt;/code&gt;, that &lt;a href=&quot;http://zyjustin9.iteye.com/blog/2172445&quot;&gt;resolved it&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Open Source Project Learning Experience</title>
   <link href="http://lkkandsyf.github.io/opensource/2017/02/17/Open-Source-Project-Learning-Experience"/>
   <updated>2017-02-17T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/opensource/2017/02/17/Open-Source-Project-Learning-Experience</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;
&lt;p&gt;这里收集了关于学习开源项目的一些坎坷，以及收获。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#java&quot; id=&quot;markdown-toc-java&quot;&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#springside4&quot; id=&quot;markdown-toc-springside4&quot;&gt;springside4&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#crapapi&quot; id=&quot;markdown-toc-crapapi&quot;&gt;CrapApi&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#blade&quot; id=&quot;markdown-toc-blade&quot;&gt;blade&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#java-bible&quot; id=&quot;markdown-toc-java-bible&quot;&gt;java-bible&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#python&quot; id=&quot;markdown-toc-python&quot;&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#pygrok&quot; id=&quot;markdown-toc-pygrok&quot;&gt;pygrok&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cc&quot; id=&quot;markdown-toc-cc&quot;&gt;&lt;strong&gt;C++/C&lt;/strong&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#opencv&quot; id=&quot;markdown-toc-opencv&quot;&gt;OpenCV&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;java&quot;&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&quot;springside4&quot;&gt;springside4&lt;/h3&gt;

&lt;p&gt;A Spring Framework based, pragmatic style JavaEE application reference architecture.
&lt;a href=&quot;https://github.com/springside/springside4&quot;&gt;repo&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;crapapi&quot;&gt;CrapApi&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://api.crap.cn/index.do#/web/article/detail/web/PAGE/WELCOME&quot;&gt;repo&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;blade&quot;&gt;blade&lt;/h3&gt;

&lt;p&gt;A Simple, Elegant Java Web Framework! website, &lt;a href=&quot;https://github.com/biezhi/blade&quot;&gt;repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;use blade framework bbs web application:&lt;a href=&quot;https://github.com/junicorn/java-china&quot;&gt;java-china&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;java-bible&quot;&gt;java-bible&lt;/h3&gt;

&lt;p&gt;Java Bible is my java technology stack,&lt;a href=&quot;https://github.com/biezhi/java-bible&quot;&gt;repo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;python&quot;&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&quot;pygrok&quot;&gt;pygrok&lt;/h3&gt;

&lt;h2 id=&quot;cc&quot;&gt;&lt;strong&gt;C++/C&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&quot;opencv&quot;&gt;OpenCV&lt;/h3&gt;
</content>
 </entry>
 
 <entry>
   <title>Music</title>
   <link href="http://lkkandsyf.github.io/music/2017/02/12/Music"/>
   <updated>2017-02-12T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/music/2017/02/12/Music</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;


&lt;p&gt;&lt;a href=&quot;http://tv.cctv.com/2017/02/04/VIDEp4DJYg5JPjM09fAhitlK170204.shtml&quot;&gt;2017俄罗斯蓝光之夜音乐会&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Idea</title>
   <link href="http://lkkandsyf.github.io/ide/2017/01/19/IDEA"/>
   <updated>2017-01-19T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/ide/2017/01/19/IDEA</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;开发Scala,Java项目，需要一个好的IDE，idea是一个比较好的开发环境，熟练使用，对自己也是大有帮助。介绍关于java IDE的使用技巧(IDEA)&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#plugins&quot; id=&quot;markdown-toc-plugins&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#quick-shortcut-key&quot; id=&quot;markdown-toc-quick-shortcut-key&quot;&gt;quick shortcut key&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#debug&quot; id=&quot;markdown-toc-debug&quot;&gt;debug&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#more-project-merge&quot; id=&quot;markdown-toc-more-project-merge&quot;&gt;more project merge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#compile&quot; id=&quot;markdown-toc-compile&quot;&gt;compile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;plugins&quot;&gt;Plugins&lt;/h2&gt;

&lt;p&gt;对于一个键盘党来说，插件是必不可少的。用好插件和快捷键将事半功倍。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ideaVim:vim集成工具,用好vim是前提&lt;/li&gt;
  &lt;li&gt;Acejump:esaymotion&lt;a href=&quot;https://github.com/johnlindquist/AceJump&quot;&gt;https://github.com/johnlindquist/AceJump&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Javadoc:文档&lt;/li&gt;
  &lt;li&gt;Maven Helper&lt;/li&gt;
  &lt;li&gt;markdown&lt;/li&gt;
  &lt;li&gt;findbug&lt;/li&gt;
  &lt;li&gt;SQL Query&lt;/li&gt;
  &lt;li&gt;BashSupport&lt;/li&gt;
  &lt;li&gt;.ignore&lt;/li&gt;
  &lt;li&gt;key promoter&lt;/li&gt;
  &lt;li&gt;jrebel&lt;/li&gt;
  &lt;li&gt;PlantUML&lt;/li&gt;
  &lt;li&gt;mybatis&lt;/li&gt;
  &lt;li&gt;ASM&lt;/li&gt;
  &lt;li&gt;JVM Debugger Memory View&lt;/li&gt;
  &lt;li&gt;Lombok&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;quick-shortcut-key&quot;&gt;quick shortcut key&lt;/h2&gt;

&lt;p&gt;这一切都是在ideaVim下来操作的。&lt;/p&gt;

&lt;p&gt;Alt + D : 全屏&lt;/p&gt;

&lt;p&gt;Alt + Insert:重构&lt;/p&gt;

&lt;p&gt;Alt + K :进入esaymotion mode&lt;/p&gt;

&lt;p&gt;Ctrl + F12:文件结构&lt;/p&gt;

&lt;p&gt;Ctrl + B:进入光标定义处&lt;/p&gt;

&lt;p&gt;Ctrl + Shift + B:进入光标中的方法&lt;/p&gt;

&lt;p&gt;Ctrl + Left:返回&lt;/p&gt;

&lt;p&gt;Ctrl + Right:返回&lt;/p&gt;

&lt;p&gt;Alt + 1&lt;/p&gt;

&lt;p&gt;Alt + 2&lt;/p&gt;

&lt;p&gt;Alt + 4&lt;/p&gt;

&lt;p&gt;Alt + 5&lt;/p&gt;

&lt;p&gt;Alt + 6&lt;/p&gt;

&lt;p&gt;Alt + 7&lt;/p&gt;

&lt;p&gt;Alt + 8&lt;/p&gt;

&lt;p&gt;Alt + 9&lt;/p&gt;

&lt;p&gt;Ctrl + F4 :关闭标签文件&lt;/p&gt;

&lt;p&gt;Ctrl + F8 :在当前设置断点&lt;/p&gt;

&lt;p&gt;Shift + F10 :编译并运行&lt;/p&gt;

&lt;p&gt;Shift + F9 :进入debug mode&lt;/p&gt;

&lt;p&gt;Ctrl + / :注释单行代码&lt;/p&gt;

&lt;p&gt;Ctrl + Shitf + /:注释块代码(首先要选中)&lt;/p&gt;

&lt;p&gt;添加统一的文件头注释:settings-&amp;gt;Editor-&amp;gt;File and Code Templates,在include的标签页中填写自己需要的头注释。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * File:	${NAME}.java
 * User:	Liangkangkang
 * Date:	${DATE}
 * Time:	${TIME}
 * Mail:	lkkforworl@gmail.com
 * Desc:
 */
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;更好的plugins:JavaDoc&lt;/p&gt;

&lt;p&gt;常用的注释标签:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@author 作者
@version 版本
@see 参考转向
@param 参数说明
@return 返回值
@exception　异常
@since jdk　版本
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用JavaDoc:在Vim浏览模式中，选中之后，按Alt+Insert,选中对应的操作。&lt;/p&gt;

&lt;p&gt;生成Doc:Tools-&amp;gt;Generate JavaDoc,在弹出的输出各种信息，注意避免乱码的情况:在Other command line arguments上填写:-encoding utf-8 -charset utf-8&lt;/p&gt;

&lt;p&gt;Alt + insert:新建class的各种方法&lt;/p&gt;

&lt;h2 id=&quot;debug&quot;&gt;debug&lt;/h2&gt;

&lt;p&gt;一些基本的操作&lt;/p&gt;

&lt;p&gt;设置断点：通过鼠标在行号的左边，点击，就ok了，再次点击就取消&lt;/p&gt;

&lt;p&gt;next：F8	#运行一行代码&lt;/p&gt;

&lt;p&gt;step: F7	#如果碰到函数，就进入&lt;/p&gt;

&lt;p&gt;强制进入代码:Alt + Shift + F7&lt;/p&gt;

&lt;p&gt;continue step out:Shift + F8&lt;/p&gt;

&lt;p&gt;运行到光标出:Alt + F9&lt;/p&gt;

&lt;p&gt;恢复程序:F9&lt;/p&gt;

&lt;p&gt;显示执行哪一个断点:Alt + F10&lt;/p&gt;

&lt;p&gt;debug 运行Java类，Ctrl + Shift + F9&lt;/p&gt;

&lt;p&gt;正常运行Java来:Ctrl + Shift + F10&lt;/p&gt;

&lt;p&gt;程序中的输出在Console显示。&lt;/p&gt;

&lt;h2 id=&quot;more-project-merge&quot;&gt;more project merge&lt;/h2&gt;

&lt;p&gt;我们做项目实际中经常会遇到这样的情况，创建一个common项目（Maven项目）作为公用项目，common中有很多工具类可以供其它多个项目调用。例如，把common、service都单独拆开成独立的Maven项目，供其它的项目使用，通过jar的方式被其它项目通过Maven引用。现在web项目需要引用common和service，如果IDEA分别单独打开common、service、web项目，那么在调试web项目的时候，就会遇到困难：web引用的common和service中的代码都是打包成jar的，无法调试。除非common和service安装的时候把源码也install到本地仓库，但是那样不方便，每次common和service更新都需要maven install操作后，web中引用的代码才会更新。&lt;/p&gt;

&lt;p&gt;当我们多人协作时，会创建不同的项目，但是项目之间还有依赖。所以我们必须把所有的项目弄到一起，合并起来相互依赖，就可以了。&lt;/p&gt;

&lt;p&gt;IDEA解决方案:首先，把所需要的项目，从svn上下载本地同一个目录下，然后，在IDEA中File-&amp;gt;Open选择刚刚的目录，打开之后发现IDEA没有自动识别Maven项目，这时候在IDEA右侧的Maven Project栏添加项目的pom.xml文件，这样就可以识别了，按住Ctrl多选每个项目中的pom.xml，然后点击OK,这样就可以调试了，&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/xyw591238/article/details/51306462&quot;&gt;reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nginx+Tomcat7+Mencached负载均衡集群部署笔记&lt;a href=&quot;http://blog.csdn.net/xyw591238/article/details/51306494&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;compile&quot;&gt;compile&lt;/h2&gt;

&lt;p&gt;org.apache.test.Main
VM:-Dspark.master=local&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Holes</title>
   <link href="http://lkkandsyf.github.io/holes/2017/01/04/holes"/>
   <updated>2017-01-04T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/holes/2017/01/04/holes</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;这里整理一些安全漏洞修复的基本方法&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#openssh&quot; id=&quot;markdown-toc-openssh&quot;&gt;OpenSSH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;openssh&quot;&gt;OpenSSH&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;OpenSSH升级&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;OpenSSH安装依赖pam,zlib,openssl等。所以要提前安装这几个软件。&lt;/p&gt;

&lt;p&gt;OpenSSH &lt;a href=&quot;http://ftp.spline.de/pub/OpenBSD/OpenSSH/portable/&quot;&gt;download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;zlib &lt;a href=&quot;&quot;&gt;download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;openssl &lt;a href=&quot;&quot;&gt;download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ref:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.iyunv.com/thread-236685-1-1.html&quot;&gt;centos upgrade OpenSSH&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.iyunv.com/thread-236685-1-1.html&quot;&gt;redhat upgrade OpenSSH&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Hadoop</title>
   <link href="http://lkkandsyf.github.io/2017/01/03/Hadoop"/>
   <updated>2017-01-03T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/2017/01/03/Hadoop</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;进入大数据，Hadoop是基本。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#基本知识&quot; id=&quot;markdown-toc-基本知识&quot;&gt;基本知识&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;基本知识&quot;&gt;基本知识&lt;/h2&gt;

&lt;p&gt;安装之前需要Java环境。&lt;/p&gt;

&lt;p&gt;简单单机模式，从官网下载编译好的包。然后在Hadoop的配置文件中/etc/hadoop/hadoop-env.sh修改&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;JAVA_HOME = /usr/lib/jdk
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在.bashrc或者.zshrc中配置HADOOP_HOME的路径，以便让hive跑起来.&lt;/p&gt;

&lt;p&gt;配置完成之后,进入hadoop目录。运行WordCount:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/hadoop jar share/hadoop/mapreduce/sources/hadoop-mapreduce-examples-2.7.3-sources.jar org.apache.hadoop.examples.WordCount ./README.txt out
# 统计结果
cat out/*
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参考:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.powerxing.com/install-hadoop/&quot;&gt;powerxing&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Jdb</title>
   <link href="http://lkkandsyf.github.io/debug/2016/12/25/jdb"/>
   <updated>2016-12-25T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/debug/2016/12/25/jdb</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#jdb基本知识&quot; id=&quot;markdown-toc-jdb基本知识&quot;&gt;jdb基本知识&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jdb-usage&quot; id=&quot;markdown-toc-jdb-usage&quot;&gt;jdb usage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tools&quot; id=&quot;markdown-toc-tools&quot;&gt;tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jdb基本知识&quot;&gt;jdb基本知识&lt;/h2&gt;

&lt;p&gt;假如Java源代码是hello.java文件，在编译时要加上-g选项，这和gdb是一样的。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;javac -g hello.java
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这时会有一个hello.class的文件，现在就可以调试了&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jdb hello
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;加载成功后，我们通常会在main函数上设置断点&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;stop in hello.main
stop at &amp;lt;行数&amp;gt;	#在某行设置断点
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如何查看被成功加入的断点&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;clear
clear &amp;lt;行数|方法&amp;gt;	#清除所指定处的断点
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;成功后，运行程序&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;run
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;此时程序停到main函数这一行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;list	#list code
step	#执行当前行的代码
step up	#运行到当前行结束
print i	#打印变量i的值
dump i
eval i
monitor &amp;lt;command&amp;gt;	#当程序暂停时自动执行命令
monitor	#列出所有的monitor
watch &amp;lt;变量&amp;gt;	#运行到变量的值改变时停止
unwatch &amp;lt;变量&amp;gt;	#取消watch
list [行数|方法] 列出(从[行数|方法]开始的)源代码
classes		#列出所有已知的类
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果这个值是错的，需要修改&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set i = 2
locals	#显示当前堆栈帧中的所有本地变量
next	#执行，并跳过函数
stepi	#一次只执行一个指令
cont	#从当前位置直接执行到程序结束(或者下一个断点)
!!		#重复最后一个命令
&amp;lt;n&amp;gt; &amp;lt;command&amp;gt;	#将某个命令执行n次
help	#帮助手册
version	#jdb版本
exit
quit	#退出

jdb -classpath . Classname
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参考：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.packtpub.com/books/content/debugging-java-programs-using-jdb&quot;&gt;https://www.packtpub.com/books/content/debugging-java-programs-using-jdb&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;jdb-usage&quot;&gt;jdb usage&lt;/h2&gt;

&lt;p&gt;JDWP的全写是:Java Debug Wire Protocol:即JAVA调试器无线协议，它定义了调试器(Debugger)和被调试的JAVA虚拟机(target vm)之间的通信协议。在这里,我更要说明下：Debugger与Target vm,Target vm
中运行着我们希望要调试的程序，它与一般运行的Java虚拟机没有什么区别，只是在启动时加载了Agent JDWP 从而具备了调试功能。而debugger 就是我们熟知的调试器，它向运行中的target vm
发送命令来获取target vm 运行时的状态和控制Java 程序的执行。Debugger 和target vm 分别在各自的进程中运行，他们之间的通信协议就是JDWP。JDWP
与其他许多协议不同，它仅仅定义了数据传输的格式，但并没有指定具体的传输方式。这就意味着一个JDWP 的实现可以不需要做任何修改就正常工作在不同的传输方式上（在JDWP
传输接口中会做详细介绍）。JDWP 是语言无关的。理论上我们可以选用任意语言实现JDWP。然而我们注意到，在JDWP的两端分别是target vm 和debugger。Target vm 端，JDWP 模块必须以Agent library 的形式在Java 虚拟机启动时加载，并且它必须通过Java 虚拟机提供的JVMTI 接口实现各种debug
的功能，所以必须使用C/C++ 语言编写。而debugger 端就没有这样的限制，可以使用任意语言编写，只要遵守JDWP 规范即可。JDI（Java Debug Interface）就包含了一个Java 的JDWP debugger 端的实现，JDK 中调试工具jdb 也是使用JDI 完成其调试功能的。&lt;/p&gt;

&lt;p&gt;直接使用本机绑定的通讯端口，不指定进程&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jdb -connect com.sun.jdi.SocketAttach:hostname=localhost,port=xxx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用jdb调试Java程序&lt;/p&gt;

&lt;p&gt;首先启动Java程序&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000 MainClassName
or
java -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000 -jar xxx.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;用以下命令附加到上面的运行的Java程序，用于调试分析&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jdb -connect com.sun.jdi.SocketAttach:hostname=localhost,port=8000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;之后就可以使用threads,thread,where,list等命令开始调试&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;远程调试&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;远程调试Java程序是非常有用的。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -Xdebug -Xrunjdwp:transport=dt_socket,address=192.168.10.205:8000,suspend=y -jar remoting-debug.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;client连接&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jdb -connect com.sun.jdi.SocketAttach:hostname=192.168.10.205,port=8000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;切记是同一个目录，要不找不到源代码&lt;/p&gt;

&lt;p&gt;two way:同一个目录下，两个终端&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;one terminal:
Java -agentlib:jdwp=transport=dt_socket,server=y,address=8000 MainClassName
or jar
Java -agentlib:jdwp=transport=dt_socket,server=y,address=8000 -jar xxx.jar
other terminal:
jdb -connect com.sun.jdi.SocketAttach:hostname=localhost,port=8000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参数：&lt;/p&gt;

&lt;p&gt;-XDebug 启用调试&lt;/p&gt;

&lt;p&gt;-Xrunjdwp 加载JDWP的JPDA参考执行实例。&lt;/p&gt;

&lt;p&gt;transport  用于在调试程序和 VM 使用的进程之间通讯。&lt;/p&gt;

&lt;p&gt;dt_socket 套接字传输。&lt;/p&gt;

&lt;p&gt;server=y/n VM是否需要作为调试服务器执行。&lt;/p&gt;

&lt;p&gt;address=2345调试服务器监听的端口号。&lt;/p&gt;

&lt;p&gt;suspend=y/n 是否在调试客户端建立连接之后启动 VM 。&lt;/p&gt;

&lt;p&gt;关于suspend多说一句，如果设置为y，它会阻塞程序运行，直到有客户端连接到对应的监听端口(这里是9527)，程序才真正开始执行。我们有时候会抱怨程序一闪而过，还没来得及在本地加载上代码程序就执行完了，这种情况就可以使用suspend参数。&lt;/p&gt;

&lt;p&gt;还有一个细节是-jar参数不能写到-Xug参数前，像这样无法启用调试：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -jar lib/Main.jar -Xdebug -Xrunjdwp:transport=dt_socket,address=9527,server=y,suspend=y
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;要远程调试maven2启动的程序，例如mvn jetty:run，可以在启动程序时执行命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export MAVEN_OPTS=&quot;-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=y&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;cofig:&lt;/p&gt;

&lt;p&gt;Java代码&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set MAVEN_DEBUG_OPTS=-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这里对几个参数进行说明：&lt;/p&gt;

&lt;p&gt;-Xdebug ：  启动debug模式&lt;/p&gt;

&lt;p&gt;-Xnoagent：  禁用默认sun.tools.debug调试器&lt;/p&gt;

&lt;p&gt;-Djava.compiler：指定编译器类型，可方便优化 jitc jitc_de等&lt;/p&gt;

&lt;p&gt;-Xrunjdwp：启动调试协议JDWP，全称是Java Debug Wire Protocol，它定义了JPDA front-end和JPDA back-end之间通讯信息的二进制格式。这里的通讯信息主要包括两种：调试器发送给JVM的请求信息和JVM发送给调试器的调试信息。有如下子项：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-transport：JPDA front-end和back-end之间的传输方法。dt_socket表示使用套接字传输。
-server：y/n 该jvm是被调试者还是调试器
-suspend：y/n 是否等待外部调试器的连接，如jetty启动时候，是否等待eclipse的远程连接后在进行jetty的初始化工作。在调试web容器的时候用的很多
-address：监听端口
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用mvn来debug&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn exec:exec -Dexec.executable=&quot;java&quot; -Dexec.args=&quot;-classpath %classpath -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=1044 com.mycompany.app.App&quot;
jdb -attach 1044
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;借鉴jdb调试&lt;a href=&quot;https://www.packtpub.com/books/content/debugging-java-programs-using-jdb&quot;&gt;https://www.packtpub.com/books/content/debugging-java-programs-using-jdb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;教程&lt;a href=&quot;http://www.tutorialspoint.com/jdb/jdb_introduction.htm&quot;&gt;http://www.tutorialspoint.com/jdb/jdb_introduction.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;软件指南针&lt;a href=&quot;http://www.softown.cn/post/180.html&quot;&gt;http://www.softown.cn/post/180.html&lt;/a&gt;这里介绍很多关于Java的工具&lt;/p&gt;

&lt;p&gt;泰晓科技&lt;a href=&quot;http://tinylab.org/use-jdb-to-debug-android-application/&quot;&gt;http://tinylab.org/use-jdb-to-debug-android-application/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;远程调试&lt;a href=&quot;http://www.jianshu.com/p/c6697ec09b25&quot;&gt;http://www.jianshu.com/p/c6697ec09b25&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;tools&quot;&gt;tools&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;JD-GUI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JD-GUI, a standalone graphical utility that displays Java sources from CLASS files.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jd.benow.ca/&quot;&gt;office site&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/java-decompiler/jd-gui&quot;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/technotes/tools/windows/jdb.html&quot;&gt;oracle jdb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/haoel/article/details/2289305&quot;&gt;gci-java-debug&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;jvisualvm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一个Java任务管理器&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/java/j-lo-visualvm/&quot;&gt;IBM-blog&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Java</title>
   <link href="http://lkkandsyf.github.io/java/2016/12/24/Java"/>
   <updated>2016-12-24T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/java/2016/12/24/Java</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;这里整理关于Java的基本语法和使用，以及数据结构和算法的相关知识.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#基本语法&quot; id=&quot;markdown-toc-基本语法&quot;&gt;&lt;strong&gt;基本语法&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#数据结构&quot; id=&quot;markdown-toc-数据结构&quot;&gt;&lt;strong&gt;数据结构&lt;/strong&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#数组&quot; id=&quot;markdown-toc-数组&quot;&gt;数组&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#动态数组&quot; id=&quot;markdown-toc-动态数组&quot;&gt;动态数组&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#链表&quot; id=&quot;markdown-toc-链表&quot;&gt;链表&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#栈&quot; id=&quot;markdown-toc-栈&quot;&gt;栈&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#字符串&quot; id=&quot;markdown-toc-字符串&quot;&gt;字符串&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#队列&quot; id=&quot;markdown-toc-队列&quot;&gt;队列&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#集合&quot; id=&quot;markdown-toc-集合&quot;&gt;集合&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#树&quot; id=&quot;markdown-toc-树&quot;&gt;树&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#图&quot; id=&quot;markdown-toc-图&quot;&gt;图&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#哈希映射&quot; id=&quot;markdown-toc-哈希映射&quot;&gt;哈希映射&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#&quot; id=&quot;markdown-toc-&quot;&gt;#&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#第三方库&quot; id=&quot;markdown-toc-第三方库&quot;&gt;&lt;strong&gt;第三方库&lt;/strong&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#log4j&quot; id=&quot;markdown-toc-log4j&quot;&gt;Log4j&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#grok&quot; id=&quot;markdown-toc-grok&quot;&gt;Grok&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#高级使用&quot; id=&quot;markdown-toc-高级使用&quot;&gt;&lt;strong&gt;高级使用&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#-1&quot; id=&quot;markdown-toc--1&quot;&gt;#&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#-2&quot; id=&quot;markdown-toc--2&quot;&gt;&lt;em&gt;**&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#-3&quot; id=&quot;markdown-toc--3&quot;&gt;&lt;em&gt;**&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#-4&quot; id=&quot;markdown-toc--4&quot;&gt;&lt;em&gt;**&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#-5&quot; id=&quot;markdown-toc--5&quot;&gt;&lt;em&gt;**&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tools&quot; id=&quot;markdown-toc-tools&quot;&gt;&lt;strong&gt;tools&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#开源项目&quot; id=&quot;markdown-toc-开源项目&quot;&gt;&lt;strong&gt;开源项目&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;基本语法&quot;&gt;&lt;strong&gt;基本语法&lt;/strong&gt;&lt;/h2&gt;

&lt;h2 id=&quot;数据结构&quot;&gt;&lt;strong&gt;数据结构&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&quot;数组&quot;&gt;数组&lt;/h3&gt;

&lt;p&gt;Java数组声明，创建，初始化&lt;/p&gt;

&lt;p&gt;一维数组的声明方式:type var[];or type[] var;声明数组时不能指定其长度(数组中元素的个数)，Java中使用&lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt;关键字创建对象，格式为:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;数组名 = new 数组元素类型[数组元素的个数]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;code:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestNew&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;初始化:&lt;/p&gt;

&lt;p&gt;1.动态初始化:数组定义与为数组分配空间和赋值的操作分开进行；&lt;/p&gt;

&lt;p&gt;2.静态初始化:在定义数组的同时就为数组元素分配空间并赋值；&lt;/p&gt;

&lt;p&gt;3.默认初始化：数组是引用类型，它的元素相当与类的成员变量，因此数组分配空间后每个元素也被按照成员变量的规则被隐式初始化。&lt;/p&gt;

&lt;p&gt;动态&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestD&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2008&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2008&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2008&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;静态:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestS&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Time&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hour&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;默认:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestDefault&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;动态数组&quot;&gt;动态数组&lt;/h3&gt;

&lt;h3 id=&quot;链表&quot;&gt;链表&lt;/h3&gt;

&lt;h3 id=&quot;栈&quot;&gt;栈&lt;/h3&gt;

&lt;h3 id=&quot;字符串&quot;&gt;字符串&lt;/h3&gt;

&lt;h3 id=&quot;队列&quot;&gt;队列&lt;/h3&gt;

&lt;h3 id=&quot;集合&quot;&gt;集合&lt;/h3&gt;

&lt;p&gt;集合的使用&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//导入包&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;树&quot;&gt;树&lt;/h3&gt;

&lt;h3 id=&quot;图&quot;&gt;图&lt;/h3&gt;

&lt;h3 id=&quot;哈希映射&quot;&gt;哈希映射&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;HashSet&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HashMap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HashMap&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;#&lt;/h2&gt;

&lt;h2 id=&quot;第三方库&quot;&gt;&lt;strong&gt;第三方库&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Java中常用的第三方库。需要自己熟练掌握，以便在工作中灵活使用。&lt;/p&gt;

&lt;h3 id=&quot;log4j&quot;&gt;Log4j&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://logging.apache.org/log4j/1.2/download.html&quot;&gt;office download&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;grok&quot;&gt;Grok&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://grok.nflabs.com/&quot;&gt;office site&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;高级使用&quot;&gt;&lt;strong&gt;高级使用&lt;/strong&gt;&lt;/h2&gt;

&lt;h2 id=&quot;-1&quot;&gt;#&lt;/h2&gt;

&lt;h2 id=&quot;-2&quot;&gt;&lt;em&gt;**&lt;/em&gt;&lt;/h2&gt;
&lt;h2 id=&quot;-3&quot;&gt;&lt;em&gt;**&lt;/em&gt;&lt;/h2&gt;
&lt;h2 id=&quot;-4&quot;&gt;&lt;em&gt;**&lt;/em&gt;&lt;/h2&gt;
&lt;h2 id=&quot;-5&quot;&gt;&lt;em&gt;**&lt;/em&gt;&lt;/h2&gt;

&lt;h2 id=&quot;tools&quot;&gt;&lt;strong&gt;tools&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://findbugs.sourceforge.net/&quot;&gt;findbugs&lt;/a&gt;:非常好的代码检测工具，检测的深度比较深，对代码中渗透的性能，内存的使用释放有很好的检测，能检测出可以导致错误的代码，如空指针等。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://checkstyle.sourceforge.net/&quot;&gt;checkstyle&lt;/a&gt;:检测代码风格的工具.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pmd.github.io/&quot;&gt;PMD&lt;/a&gt;:可以配合findbugs来一起来检测。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sourceforge.net/project/showfiles.php?group_id=51180&quot;&gt;Source-Navigator&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install libx11-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;启动:snavigator&lt;/p&gt;

&lt;p&gt;阅读java代码:ctags，在项目的根目录:ctags -R;就可以使用了&lt;/p&gt;

&lt;p&gt;javap:Java反编译工具,项目的话，可以是jd-gui:一个C++开发的Java反编译工具&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;javap -c xxx.class
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;性能分析:jprofile:jvisualvm&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OpenGrok&lt;/code&gt;: fast and usable source code search and cross reference engine, written in Java. It helps you search, cross-reference and navigate your source tree. It can understand various program file formatsand version control histories like Mercurial, Git, SCCS, RCS, CVS, Subversion,Teamware, ClearCase, Perforce, Monotone and Bazaar.&lt;/p&gt;

&lt;p&gt;阅读Java代码，类似与Linux代码中的LXR一样,&lt;a href=&quot;http://opengrok.github.io/OpenGrok/&quot;&gt;office site&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;开源项目&quot;&gt;&lt;strong&gt;开源项目&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://git.oschina.net/calvin1978/springside4&quot;&gt;sprintsidev4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/waylau/essential-java&quot;&gt;https://github.com/waylau/essential-java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/question/2367675_236222&quot;&gt;https://www.oschina.net/question/2367675_236222&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;quick.sh
#!/bin/bash

echo &quot;[Pre-Requirement] Makesure install JDK 7.0+ and set the JAVA_HOME.&quot;
echo &quot;[Pre-Requirement] Makesure install Maven 3.0.3+ and set the PATH.&quot;

export MAVEN_OPTS=&quot;$MAVEN_OPTS -Xmx1024m -XX:MaxPermSize=128M -Djava.security.egd=file:/dev/./urandom&quot;

echo &quot;[Step 1] Install all springside modules to local maven repository.&quot;
cd modules
mvn clean install -DskipTests
if [ $? -ne 0  ];then
	  echo &quot;Quit  because maven install fail&quot;
	    exit -1
fi

echo &quot;[Step 2] run boot-api project in dev mode.&quot;
cd ../examples/boot-api
mvn spring-boot:run
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/EhsanTang/CrapApi&quot;&gt;CrapAPi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jinnianshilongnian.iteye.com/blog/1594806&quot;&gt;springmvc&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Mvn</title>
   <link href="http://lkkandsyf.github.io/2016/12/24/mvn"/>
   <updated>2016-12-24T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/2016/12/24/mvn</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。&lt;/p&gt;

&lt;p&gt;Maven:这是Java项目的管理工具。&lt;/p&gt;

&lt;p&gt;Maven库,&lt;a href=&quot;http://repo2.maven.org/maven2/&quot;&gt;http://repo2.maven.org/maven2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maven依赖查询,&lt;a href=&quot;http://mvnrepository.com/&quot;&gt;http://mvnrepository.com/&lt;/a&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#基本命令&quot; id=&quot;markdown-toc-基本命令&quot;&gt;&lt;strong&gt;基本命令&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#pomxml解析&quot; id=&quot;markdown-toc-pomxml解析&quot;&gt;pom.xml解析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mvn-run-java-project&quot; id=&quot;markdown-toc-mvn-run-java-project&quot;&gt;mvn run java project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#books&quot; id=&quot;markdown-toc-books&quot;&gt;books&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reference&quot; id=&quot;markdown-toc-reference&quot;&gt;reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;基本命令&quot;&gt;&lt;strong&gt;基本命令&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;创建新项目&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;通过命令行的方式：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn archetype:generate -DgroupId={project-packagingName}
   -DartifactId={project-name}
   -DarchetypeArtifactId=maven-archetype-quickstart maven-archetype-webapp
   -DinteractiveMode=false
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;maven:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# firt way
mvn archetype:generate		#新疆maven项目
选择version
然后填写groupId,artifactId,versin,package
确定properities configuratin:Y
成功创建maven项目
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;根据所有的配置写到一起&lt;/p&gt;

&lt;p&gt;mvn archetype:generate	固定的格式&lt;/p&gt;

&lt;p&gt;-DgroupId	组织标示(包名)&lt;/p&gt;

&lt;p&gt;-DartifactId	项目名称&lt;/p&gt;

&lt;p&gt;-DarchetypeArtifactId	指定ArchetypeId,Java工程&lt;/p&gt;

&lt;p&gt;-DinteractiveMode	是否使用交互模式&lt;/p&gt;

&lt;p&gt;-DarchetypeCatalog	由于网络的源的原因，使用内部源&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# second way	把所有的配置写到一起
mvn archetype:generate -DgroupId=com.nsfocus -DartifactId=Secority  -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false -DarchetypeCatalog=internal
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;根据maven-archetype-quickstart模板来创建项目&lt;/p&gt;

&lt;p&gt;常用命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn help:system
mvn clean compile	#编译源代码
mvn clean test
mvn test-compile	#编译测试源代码
mvn test	#运行应用程序中的单元测试
mvn package	#打包
mvn clean package	#根据项目生成jar
mvn install		#在本地Repo安装jar
mvn clean install	#在本地Repo中安装jar
mvn dependency:tree列出jar包直接依赖引入的jar
mvn dependency:resolve	#打印处已经解决依赖的列表
mvn eclipse:eclipse	#生成eclipse项目文件
mvn idea:idea	#生成ieda项目
mvn eclipse clean	#清除以前编译的东西，重新再来
mvn site-deploy	#生成站点目录并打包
mvn deploy	#发布项目
mvn site	#生成项目相关的信息的网站
mvn clean	#清除项目目录中的生成的结果
mvnjetty:run	#启动jetty服务
mvntomcat:run	#启动tomcat服务
mvn clean package -Dmaven.test.skip=true	#清除以前的包后重新打包，跳过测试类
mvn archetype:generate -DarchetypeCatalog=internal	#查看maven有哪些项目类型分类
mvn  -Dtest package	#组合使用goal命令，只打包不测试
mvn jar:jar	#只打jar
mvn test-skipping compile-skipping test-compile		#(-skipping的灵活运用，也可以用于其他组合命令)
mvn install:install-file -DgroupId=com -DartifactId=client -Dversion=0.1.0 -Dpackaging=jar -Dfile=lient-0.1.0.jar -DdownloadSource=true -DdownloadJavadocs=true #发布第三方jar到本地库中
mvn -e	#显示详细错误信息
mvn valitdate	#验证工程是否正确，所有需要的资源是否可用
mvn verify	# 运行任何检查，验证包是否有效且达到质量标准
mvn install -X # 想要查看完整的依赖踪迹，包含那些因为冲突或者其它原因而被拒绝引入的构件，打开 Maven 的调试标记运行
mvn install -Dmaven.test.skip=true # 给任何目标添加maven.test.skip 属性就能跳过测试
mvn install assembly:assembly # 构建装配Maven Assembly 插件是一个用来创建你应用程序特有分发包的插件

mvn -v # 显示版本
mvn help:describe -Dplugin=help #使用 help 插件的 describe 目标来输出 Maven Help 插件的信息。
mvn help:describe -Dplugin=help -Dfull #使用Help 插件输出完整的带有参数的目标列
mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull #获取单个目标的信息,设置 mojo 参数和 plugin 参数。此命令列出了Compiler 插件的compile 目标的所有信息
mvn help:describe -Dplugin=exec -Dfull #列出所有 Maven Exec 插件可用的目标
mvn help:effective-pom #看这个“有效的 (effective)”POM，它暴露了 Maven的默认设置
mvnDebug tomcat:run 这条命令主要用来远程测试,它会监听远程测试用的8000端口,在eclipse里打开远程测试后,它就会跑起来了,设断点,调试mvn dependency:sources 故名思义,有了它,你就不用到处找源码了,运行一下,你项目里所依赖的jar包的源码就都有了
mvn help:describe 你是否因为记不清某个插件有哪些goal而痛苦过,你是否因为想不起某个goal有哪些参数而苦恼,那就试试这个命令吧,它会告诉你一切的.参数: 1. -Dplugin=pluginName 2.-Dgoal(或-Dmojo)=goalName:与-Dplugin一起使用,它会列出某个插件的goal信息,如果嫌不够详细,同样可以加-Ddetail.(注:一个插件goal也被认为是一个 “Mojo”) 下面大家就运行mvn help:describe
 -Dplugin=help -Dmojo=describe感受一下吧!


# 常用选项尤其是在使用vim的过程，会出现加载慢的问题，不便于编辑文件,主要是配置mvn的加载文件就可以了。因为用vim打开.java文件时，会编译整个项目，需要下载一些包，如果已经存在了，那么就直接打开了。
-f path/pom.xml
-s path/settings.xml
-gs path/settings.xml args 全局配置

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;标准的Maven项目结构&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;src/main/java	存放项目的源代码&lt;/p&gt;

&lt;p&gt;src/test/java	存放测试源代码&lt;/p&gt;

&lt;p&gt;src/main/resource	一些配置文件&lt;/p&gt;

&lt;p&gt;添加数据库连接池jar包&lt;/p&gt;

&lt;p&gt;现在常用的有DBCP,C3P0,Druid，使用最多的是Druid。各自有各自的特点，自己选择自己喜欢的,这里使用Druid&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!&amp;lt;!--Druid连接池包&amp;gt;
	&amp;lt;dependency&amp;gt;
		&amp;lt;groupid&amp;gt;com.alibaba&amp;lt;/groupid&amp;gt;
		&amp;lt;artifactid&amp;gt;druid&amp;lt;/artifactid&amp;gt;
		&amp;lt;version&amp;gt;1.0.12&amp;lt;/version&amp;gt;
	&amp;lt;dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;生命周期&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Maven的生命周期是为了对所有的构建过程进行了抽象，便于统一.&lt;/p&gt;

&lt;p&gt;clean(清理)&lt;/p&gt;

&lt;p&gt;cleanup(清理所有)此生命周期旨在给工程做清理工作，它主要包含以下阶段：&lt;/p&gt;

&lt;p&gt;pre-clean - 执行项目清理前所需要的工作。&lt;/p&gt;

&lt;p&gt;clean - 清理上一次build项目生成的文件。&lt;/p&gt;

&lt;p&gt;post-clean - 执行完成项目清理所需的工作.
default(默认)&lt;/p&gt;

&lt;p&gt;validate - 验证项目是否正确且所有必要的信息都可用。&lt;/p&gt;

&lt;p&gt;initialize - 初始化构建工作，如：设置参数，创建目录等。&lt;/p&gt;

&lt;p&gt;generate-sources - 为包含在编译范围内的代码生成源代码.&lt;/p&gt;

&lt;p&gt;process-sources - 处理源代码, 如过滤值.&lt;/p&gt;

&lt;p&gt;generate-resources -&lt;/p&gt;

&lt;p&gt;process-resources - 复制并处理资源文件，至目标目录，准备打包。&lt;/p&gt;

&lt;p&gt;compile - 编译项目中的源代码.&lt;/p&gt;

&lt;p&gt;process-classes - 为编译生成的文件做后期工作, 例如做Java类的字节码增强.&lt;/p&gt;

&lt;p&gt;generate-test-sources - 为编译内容生成测试源代码.&lt;/p&gt;

&lt;p&gt;process-test-sources - 处理测试源代码。&lt;/p&gt;

&lt;p&gt;generate-test-resources -&lt;/p&gt;

&lt;p&gt;process-test-resources - 复制并处理资源文件，至目标测试目录。&lt;/p&gt;

&lt;p&gt;test-compile - 将需测试源代码编译到路径。一般来说，是编译/src/test/java目录下的java文件至目标输出的测试classpath目录中。&lt;/p&gt;

&lt;p&gt;process-test-classes -&lt;/p&gt;

&lt;p&gt;test - 使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署。&lt;/p&gt;

&lt;p&gt;prepare-package -&lt;/p&gt;

&lt;p&gt;package - 接受编译好的代码，打包成可发布的格式，如 JAR 。&lt;/p&gt;

&lt;p&gt;pre-integration-test -&lt;/p&gt;

&lt;p&gt;integration-test - 按需求将发布包部署到运行环境。&lt;/p&gt;

&lt;p&gt;post-integration-test -&lt;/p&gt;

&lt;p&gt;verify -&lt;/p&gt;

&lt;p&gt;install -将包安装到本地仓库，给其他本地引用提供依赖。&lt;/p&gt;

&lt;p&gt;deploy -完成集成和发布工作，将最终包复制到远程仓库以便分享给其他开发人员。site(站点)&lt;/p&gt;

&lt;p&gt;pre-site - 执行一些生成项目站点前的准备工作。&lt;/p&gt;

&lt;p&gt;site - 生成项目站点的文档。&lt;/p&gt;

&lt;p&gt;post-site - 执行需完成站点生成的工作，如站点部署的准备工作。&lt;/p&gt;

&lt;p&gt;site-deploy - 向制定的web服务器部署站点生成文件&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mkyong.com/maven/how-to-create-a-java-project-with-maven/&quot;&gt;mvn demo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;pomxml解析&quot;&gt;pom.xml解析&lt;/h2&gt;

&lt;p&gt;cat pom.xml&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&amp;gt;
  &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
  &amp;lt;groupId&amp;gt;cn.luxh.app&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;my-app&amp;lt;/artifactId&amp;gt;
  &amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;
  &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
  &amp;lt;name&amp;gt;my-app&amp;lt;/name&amp;gt;
  &amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt;
  &amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;3.8.1&amp;lt;/version&amp;gt;
      &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;
  &amp;lt;/dependencies&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;节点元素说明&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;project&amp;gt;　　　　　　pom文件的顶级节点
&amp;lt;modelVersion&amp;gt;　　　object model版本，对Maven2和Maven3来说，只能是4.0.0　
&amp;lt;groupId&amp;gt;　　　　　　项目创建组织的标识符，一般是域名的倒写
&amp;lt;artifactId&amp;gt;　　　　定义了项目在所属组织的标识符下的唯一标识，一个组织下可以有多个项目
&amp;lt;packaging&amp;gt;　　　　  打包的方式，有jar、war、ear等
&amp;lt;version&amp;gt;　　　　　  当前项目的版本，SNAPSHOT，表示是快照版本，在开发中
&amp;lt;name&amp;gt;　　　　　　　 项目的名称
&amp;lt;url&amp;gt;　　　　　　　　项目的地址
&amp;lt;dependencies&amp;gt;　　 构建项目依赖的jar
&amp;lt;description&amp;gt;　　　　项目的描述
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其中由groupId、artifactId和version唯一的确定了一个项目坐标&lt;/p&gt;

&lt;p&gt;运行jar&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -cp $PATH/xxx.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;mvn-run-java-project&quot;&gt;mvn run java project&lt;/h2&gt;

&lt;p&gt;通过mvn来运行java main方法有三种方式&lt;/p&gt;

&lt;p&gt;一.从命令行&lt;/p&gt;

&lt;p&gt;1.运行先前编译代码，exec:java不会自动编译代码，需要手动编译mvn compile来完成&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn compile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.编译完成后，执行exec运行main方法&lt;/p&gt;

&lt;p&gt;不需要&lt;code class=&quot;highlighter-rouge&quot;&gt;传递参数&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn exec:java -Dexec.mainClass=&quot;com.vineetmanohar.module.Main&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;需要&lt;code class=&quot;highlighter-rouge&quot;&gt;传递参数&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn exec:java -Dexec.mainClass=&quot;com.vineetmanohar.module.Main&quot; -Dexec.args=&quot;arg0 arg1 arg2&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;指定对classpath的运行时依赖:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn exec:java -Dexec.mainClass=&quot;com.vineetmanohar.module.Main&quot; -Dexec.classpathScope=runtime
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;二.在pom.xml指定某个阶段执行&lt;/p&gt;

&lt;p&gt;我们可以在pom.xml中插入&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;build&amp;gt;
 &amp;lt;plugins&amp;gt;
  &amp;lt;plugin&amp;gt;
   &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
   &amp;lt;artifactId&amp;gt;exec-maven-plugin&amp;lt;/artifactId&amp;gt;
   &amp;lt;version&amp;gt;1.1.1&amp;lt;/version&amp;gt;
   &amp;lt;executions&amp;gt;
    &amp;lt;execution&amp;gt;
     &amp;lt;phase&amp;gt;test&amp;lt;/phase&amp;gt;
     &amp;lt;goals&amp;gt;
      &amp;lt;goal&amp;gt;java&amp;lt;/goal&amp;gt;
     &amp;lt;/goals&amp;gt;
     &amp;lt;configuration&amp;gt;
      &amp;lt;mainClass&amp;gt;com.vineetmanohar.module.CodeGenerator&amp;lt;/mainClass&amp;gt;
      &amp;lt;arguments&amp;gt;
       &amp;lt;argument&amp;gt;arg0&amp;lt;/argument&amp;gt;
       &amp;lt;argument&amp;gt;arg1&amp;lt;/argument&amp;gt;
      &amp;lt;/arguments&amp;gt;
     &amp;lt;/configuration&amp;gt;
    &amp;lt;/execution&amp;gt;
   &amp;lt;/executions&amp;gt;
  &amp;lt;/plugin&amp;gt;
 &amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;将CodeGenerator.main()方法的执行&lt;code class=&quot;highlighter-rouge&quot;&gt;绑定&lt;/code&gt;到maven的test阶段，通过mvn test来执行main方法。&lt;/p&gt;

&lt;p&gt;三.在pom.xml中指定某个配置来执行&lt;/p&gt;

&lt;p&gt;我们可以在pom.xml中插入&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;profiles&amp;gt;
 &amp;lt;profile&amp;gt;
  &amp;lt;id&amp;gt;code-generator&amp;lt;/id&amp;gt;
  &amp;lt;build&amp;gt;
   &amp;lt;plugins&amp;gt;
    &amp;lt;plugin&amp;gt;
     &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
     &amp;lt;artifactId&amp;gt;exec-maven-plugin&amp;lt;/artifactId&amp;gt;
     &amp;lt;version&amp;gt;1.1.1&amp;lt;/version&amp;gt;
     &amp;lt;executions&amp;gt;
      &amp;lt;execution&amp;gt;
       &amp;lt;phase&amp;gt;test&amp;lt;/phase&amp;gt;
       &amp;lt;goals&amp;gt;
        &amp;lt;goal&amp;gt;java&amp;lt;/goal&amp;gt;
       &amp;lt;/goals&amp;gt;
       &amp;lt;configuration&amp;gt;
        &amp;lt;mainClass&amp;gt;com.vineetmanohar.module.CodeGenerator&amp;lt;/mainClass&amp;gt;
        &amp;lt;arguments&amp;gt;
         &amp;lt;argument&amp;gt;arg0&amp;lt;/argument&amp;gt;
         &amp;lt;argument&amp;gt;arg1&amp;lt;/argument&amp;gt;
        &amp;lt;/arguments&amp;gt;
       &amp;lt;/configuration&amp;gt;
      &amp;lt;/execution&amp;gt;
     &amp;lt;/executions&amp;gt;
    &amp;lt;/plugin&amp;gt;
   &amp;lt;/plugins&amp;gt;
  &amp;lt;/build&amp;gt;
 &amp;lt;/profile&amp;gt;
&amp;lt;/profiles&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;将2中的配置用&lt;profile&gt;标签包裹后就能通过指定该配置文件来执行main方法，如下&lt;/profile&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn test -Pcode-generator
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;note&lt;/code&gt;:通过下面的命令可以获取mvn exec的其他配置参数说明.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn exec:help -Ddetail=true -Dgoal=java
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;四,如何将jar包加入到Maven本地仓库&lt;/p&gt;

&lt;p&gt;首先是配置好Maven环境。&lt;/p&gt;

&lt;p&gt;然后在下载的jar包下执行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn install:install-file -Dfile=sqljdbc4.jar -DgroupId=com.microsoft.sqlserver -DartifactId=sqljdbc4 -Dversion=4.0 -Dpackaging=jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最后即可以在项目中的pom.xml中添加&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.microsoft.sqlserver&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;sqljdbc4&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;4.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;五.在运行时执行本地仓库的位置&lt;/p&gt;

&lt;p&gt;本地仓库vs远程仓库&lt;/p&gt;

&lt;p&gt;运行Maven的时候，Maven所需要的任何构件都是直接从本地仓库获取的。如果本地仓库没有，它会首先尝试从远程仓库下载构件至本地仓库，然后再使用本地仓库的构件。&lt;/p&gt;

&lt;p&gt;Maven缺省的本地仓库地址为${user.home}/.m2/repository 。也就是说，一个用户会对应的拥有一个本地仓库。&lt;/p&gt;

&lt;p&gt;你也可以自定义本地仓库的位置，修改${user.home}/.m2/settings.xml ：&lt;/p&gt;

&lt;p&gt;localRepository：表示Maven用来在本地储存信息的本地仓库的目录。默认是用户家目录下面的.m2/repository目录。&lt;/p&gt;

&lt;p&gt;interactiveMode：表示是否使用交互模式，默认是true；如果设为false，那么当Maven需要用户进行输入的时候，它会使用一个默认值。&lt;/p&gt;

&lt;p&gt;offline：表示是否离线，默认是false。这个属性表示在Maven进行项目编译和部署等操作时是否允许Maven进行联网来下载所需要的信息。&lt;/p&gt;

&lt;p&gt;pluginGroups：在pluginGroups元素下面可以定义一系列的pluginGroup元素。表示当通过plugin的前缀来解析plugin的时候到哪里寻找。pluginGroup元素指定的是plugin的groupId。默认情况下，Maven会自动把org.apache.maven.plugins和org.codehaus.mojo添加到pluginGroups下。&lt;/p&gt;

&lt;p&gt;proxies：其下面可以定义一系列的proxy子元素，表示Maven在进行联网时需要使用到的代理。当设置了多个代理的时候第一个标记active为true的代理将会被使用。&lt;/p&gt;

&lt;p&gt;官网详细介绍&lt;a href=&quot;http://maven.apache.org/ref/3.0.4/maven-settings/settings.html&quot;&gt;http://maven.apache.org/ref/3.0.4/maven-settings/settings.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://xiaobenbenxiong.iteye.com/blog/2093315&quot;&gt;中文版本&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;xml代码&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;settings&amp;gt;
   ...
   &amp;lt;localRepository&amp;gt;D:\java\repository&amp;lt;/localRepository&amp;gt;
   ...
&amp;lt;/settings&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn clean install -Dmaven.repo.local=/home/user/myrepo/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://my.oschina.net/ghm7753/blog/373350&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使用自己安装的mvn，设置settings.xml，直接放在~/.m2目录，就是全局配置&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://maven.apache.org/settings.html&quot;&gt;maven.apache.org/settings.xml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/yakov/archive/2011/11/26/maven2_settings.html&quot;&gt;settings.xml中的各个标志&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原来的maven地址&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://repo1.maven.org/maven2/&quot;&gt;http://repo1.maven.org/maven2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://central.maven.org/maven2/&quot;&gt;http://central.maven.org/maven2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;自己的配置java目录下&lt;a href=&quot;https://git.oschina.net/lkk_gczx/configure-file&quot;&gt;https://git.oschina.net/lkk_gczx/configure-file &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;mvn debug:还需要自己的进一步的研究，对于工程的代码，还不知道怎么做。&lt;/p&gt;

&lt;p&gt;借鉴:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;ihttp://stackoverflow.com/questions/2935375/debugging-in-maven&quot;&gt;overstack mvn debug&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://my.oschina.net/guoxf1/blog/42954&quot;&gt;oschina blog mvn debug&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.javaworld.com/article/2077445/testing-debugging/debug-with-jdb.html&quot;&gt;single java file debug&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;books&quot;&gt;books&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Maven in action
 +&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://maven.apache.org/guides/getting-started/&quot;&gt;office guide&lt;/a&gt;
&lt;a href=&quot;http://www.yiibai.com/maven/&quot;&gt;yibai&lt;/a&gt;
&lt;a href=&quot;http://www.tutorialspoint.com/maven/&quot;&gt;tutorialspoint&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Svn</title>
   <link href="http://lkkandsyf.github.io/version%20control/2016/12/24/Svn"/>
   <updated>2016-12-24T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/version%20control/2016/12/24/Svn</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;这是Google的svn版本管理工具。svn:项目管理，git:代码管理&lt;/p&gt;

&lt;p&gt;都是专注与命令行&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://svndoc.iusesvn.com/svnbook/1.4/&quot;&gt;手册版本1.4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://linux.51yip.com/search/svn&quot;&gt;在线手册&lt;/a&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#创建仓库&quot; id=&quot;markdown-toc-创建仓库&quot;&gt;创建仓库&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#command&quot; id=&quot;markdown-toc-command&quot;&gt;command&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#blog&quot; id=&quot;markdown-toc-blog&quot;&gt;blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#gui&quot; id=&quot;markdown-toc-gui&quot;&gt;GUI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;创建仓库&quot;&gt;创建仓库&lt;/h2&gt;

&lt;p&gt;安装(Ubuntu):&lt;a href=&quot;http://subversion.apache.org/packages.html&quot;&gt;office&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install subversion
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://tortoisesvn.net/support.html&quot;&gt;tortoiseSVN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一般在服务器上创建仓库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svnadmin create repo-name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改配置文件来到rep_name/repository/conf,修改svnserver.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#[general]
#password-db = passwd
修改为
[general]
password-db = passwd
然后修改同目录下的passwd文件
# [users]
# harry = harryssecret
# sally = sallyssecret
最后为
[users]
harry = harryssecret
sally = sallyssecret
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这里的登录用的是harry,密码是harryssecret&lt;/p&gt;

&lt;p&gt;运行独立的服务器&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svnserve -d -r $PATH/repo_name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这样服务器就启动了&lt;/p&gt;

&lt;p&gt;备份仓库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svnadmin dump /opt/svndata/repo &amp;gt; /repo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;把备份出来的数据恢复到本地&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svnadmin load /opt/svndata/repos &amp;lt; /repo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;查看版本库的信息&lt;/p&gt;

&lt;p&gt;svn list&lt;/p&gt;

&lt;p&gt;svn list –verbose&lt;/p&gt;

&lt;p&gt;svn import&lt;/p&gt;

&lt;p&gt;svn delete&lt;/p&gt;

&lt;p&gt;svnlook youngest oldrepo&lt;/p&gt;

&lt;p&gt;svnadmin dump oldrepo &amp;gt; dumpfile&lt;/p&gt;

&lt;p&gt;svnadmin load newrepo &amp;lt; dumpfile&lt;/p&gt;

&lt;p&gt;停止服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps aux | grep svnserve
kill -9 ID
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;command&quot;&gt;command&lt;/h2&gt;

&lt;p&gt;svn checkout address&lt;/p&gt;

&lt;p&gt;svn add file_name&lt;/p&gt;

&lt;p&gt;svn commit -m “add filename”&lt;/p&gt;

&lt;p&gt;svn delete file_name&lt;/p&gt;

&lt;p&gt;svn commit -m “delete filename”&lt;/p&gt;

&lt;p&gt;误删文件&lt;/p&gt;

&lt;p&gt;svn up&lt;/p&gt;

&lt;p&gt;svn revert -r version&lt;/p&gt;

&lt;h2 id=&quot;blog&quot;&gt;blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/aLittleBitCool/archive/2011/07/09/2101602.html&quot;&gt;server-svn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/xd502djj/archive/2011/01/21/1941404.html&quot;&gt;blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/xulb597/archive/2012/07/02/2573575.html&quot;&gt;comand svn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/xulb597/archive/2012/07/02/2573575.html&quot;&gt;command&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-22150747-id-189264.html&quot;&gt;linux-svn&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;gui&quot;&gt;GUI&lt;/h2&gt;

&lt;p&gt;Ubuntu:[RapidSVN]&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Kafka</title>
   <link href="http://lkkandsyf.github.io/kafka/2016/12/20/Kafka"/>
   <updated>2016-12-20T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/kafka/2016/12/20/Kafka</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;这里介绍了关于Kafka的一些基本的知识&lt;/p&gt;

&lt;p&gt;Kafka是一种&lt;code class=&quot;highlighter-rouge&quot;&gt;高吞吐量的分布式发布订阅消息系统&lt;/code&gt;，它可以处理消费者者规模的网站中&lt;code class=&quot;highlighter-rouge&quot;&gt;所有的动作流数据&lt;/code&gt;,这种动作(网页浏览，搜索和其他用户的行动)是在现在网络上的许多社会功能的一个关键因素。这些数据通常是用于吞吐量的要求而通过处理日志和日志聚合来解决。对于像Hadoop的一样的日志数据和离线分析系统，但又要&lt;code class=&quot;highlighter-rouge&quot;&gt;实时处理的限制&lt;/code&gt;，这是一个可行的解决方案。Kafka的目的是通过Hadoop的并行加载机制来统一线上和离线的消息处理，也是为了通过集群机来提供实时的消费&lt;/p&gt;

&lt;p&gt;Kafak是一种高吞吐量的分布式发布订阅消息系统，有如下特性:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通过O(1)的磁盘数据结构提供消息的&lt;code class=&quot;highlighter-rouge&quot;&gt;持久化&lt;/code&gt;，这种结构对于即使以TB的消息存储也能够保持长时间的稳定性能&lt;/li&gt;
  &lt;li&gt;高吞吐量：即使是非常普通的硬件Kafka也可以支持每秒数百万的消息&lt;/li&gt;
  &lt;li&gt;支持通过Kafka服务器和消费机器集群来分区消息&lt;/li&gt;
  &lt;li&gt;支持Hadoop&lt;code class=&quot;highlighter-rouge&quot;&gt;并行数据&lt;/code&gt;加载&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;相关术语&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Broker：Kafka集群包含一个或多个服务器，这种服务器被称为broker&lt;/p&gt;

&lt;p&gt;Topic:每条发布到Kafka集群的消息&lt;code class=&quot;highlighter-rouge&quot;&gt;都有一个类别&lt;/code&gt;，这个类别被称为Topic,(物理上不同的Topic的消息公开存储，逻辑上一个Topic的消息虽然保存于一个或多个broker上但用户只需指定消息的Topic即可以生产或消费数据而不必关系数据存于何处)&lt;/p&gt;

&lt;p&gt;Partitoin:是物理上的概念，每个Topic包含一个或多个Partition&lt;/p&gt;

&lt;p&gt;Producer:负责发布消息到Kafka broker&lt;/p&gt;

&lt;p&gt;Consumer:消息消费者，向Kafka broker读取消息的客户端&lt;/p&gt;

&lt;p&gt;Comsumer Group:每个Consumer术语一个特定的Comsumer Group(可为每个Consumer指定group name，若不指定group name则属于默认的group)&lt;/p&gt;

&lt;p&gt;kafka对消息保存时根据Topic进行归类，发送消息者成为Producer,消息接受者成为Consumer，此外kafka集群有多个kafka实例组成。每个实例(server)成为broker。无论是kafka集群，还是producer和comsumer都依赖于zookeeper来保证系统可用性集群保存一些meta信息&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#安装单机版kafka&quot; id=&quot;markdown-toc-安装单机版kafka&quot;&gt;安装单机版Kafka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#集群kafka&quot; id=&quot;markdown-toc-集群kafka&quot;&gt;集群Kafka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ref&quot; id=&quot;markdown-toc-ref&quot;&gt;ref&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;安装单机版kafka&quot;&gt;安装单机版Kafka&lt;/h2&gt;

&lt;p&gt;从官网下载，&lt;a href=&quot;http://kafk.apache.org/downloads&quot;&gt;http://kafk.apache.org/downloads&lt;/a&gt;,这里采用的是2.11版本&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar xf kafka_x.x-x.x.x.tgz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;启动zookeeper和kafka&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;bin/zookeeper-server-start.sh  config/zookeeper.properties 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&amp;gt;bin/kafka-server-start.sh config/server.properties 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果需要修改zookeeper的端口，在zookeeper.properties中修改后，也要&lt;code class=&quot;highlighter-rouge&quot;&gt;同步&lt;/code&gt;修改server.properties,producer.properties以及consumer.properties里的。&lt;/p&gt;

&lt;p&gt;创建Topic&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我们用list来列出已经创建的Topic.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;bin/kafka-topics.sh --list --zookeeper localhost:2181
test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;开始使用kafka通过消费者和生产者的模式,开始启动&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test
# input some context
liangkangkang love the world
&amp;gt;bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginning
# output
liangkangkang love the world
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;等待一会，我们就可以从生产者的终端输入，然后从消费者的终端输出。&lt;/p&gt;

&lt;p&gt;停止zookeeper和kafka&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/kafka-server-stop.sh
bin/zookeeper-server-stop.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;集群kafka&quot;&gt;集群Kafka&lt;/h2&gt;

&lt;h2 id=&quot;ref&quot;&gt;ref&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://kafka.apache.org/documentation.html&quot;&gt;office docs&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Ubuntu</title>
   <link href="http://lkkandsyf.github.io/os/2016/12/16/Ubuntu"/>
   <updated>2016-12-16T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/os/2016/12/16/Ubuntu</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;这里收集一些关于Ubuntu工作中遇到的一些常见问题的解决办法。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#关机和开机&quot; id=&quot;markdown-toc-关机和开机&quot;&gt;关机和开机&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#防火墙&quot; id=&quot;markdown-toc-防火墙&quot;&gt;防火墙&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#xshell&quot; id=&quot;markdown-toc-xshell&quot;&gt;xshell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#input-method&quot; id=&quot;markdown-toc-input-method&quot;&gt;Input Method&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#虚拟机上网&quot; id=&quot;markdown-toc-虚拟机上网&quot;&gt;虚拟机上网&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#source-list&quot; id=&quot;markdown-toc-source-list&quot;&gt;source list&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#error&quot; id=&quot;markdown-toc-error&quot;&gt;error&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;关机和开机&quot;&gt;关机和开机&lt;/h2&gt;

&lt;p&gt;关机的命令行都是要root权限的
shutdown&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo shutdown -r now		#立刻重启
sudo shutdown -h now		#立刻关机
sudo shutdown -r 10		#10 min立刻重启
sudo shutdown -r 20:55		#20:55重启
sudo shutdown c			#取消重启
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;halt&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo halt		#关机
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;reboot	重启&lt;/p&gt;

&lt;p&gt;poweroff&lt;/p&gt;

&lt;p&gt;init 0		关机&lt;/p&gt;

&lt;p&gt;init 6		重启&lt;/p&gt;

&lt;p&gt;##　网卡设置&lt;/p&gt;

&lt;p&gt;暂时生效，采用命令的方式,重启网络后会失效。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ifconfig eth0 xxx.xxx.xx.xx netmask 255.255.255.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;查看网关route -n&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo route add default gw xxx.xxx.xx.xx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;查看DNS:nm-tool&lt;/p&gt;

&lt;p&gt;永久生效,修改网卡的配置文件，这个是主要的方式.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vi /etc/network/interfaces
auto eth0
iface eth0 inet static
address xxx.xxx.xxx.xxx
netmask 255.255.255.0
gateway xx.xx.xx.xx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改DNS&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vi /etc/resolvconf/resolv.conf.d/base
nameserver xxx.xxx.xx.xx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;重启网络&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ifup eth0		#重启网卡
ifdown eth0		#关闭网卡
sudo /etc/init.d/networking restart	＃重启网络服务
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;防火墙&quot;&gt;防火墙&lt;/h2&gt;

&lt;p&gt;关闭&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw disable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;xshell&quot;&gt;xshell&lt;/h2&gt;

&lt;p&gt;在xshell上传文件文件用的是sz和rz&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install lrzsz
sudo yum install -y lrzsz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输入rz，就会弹出对话框，选择要上传的文件，就可以了&lt;/p&gt;

&lt;p&gt;登录虚拟机，新建会话，然后输入信息。&lt;/p&gt;

&lt;p&gt;或者使用ssh登录,ssh ip&lt;/p&gt;

&lt;p&gt;problem:可以ping，就是在Ubuntu中连不上？&lt;/p&gt;

&lt;p&gt;在网上查了一下资料，发现Ubuntu默认不安装openssh服务器，所以若要使用ssh远程登录Ubuntu主机，首先需要安装ssh服务器。&lt;/p&gt;

&lt;p&gt;首先，判断Ubuntu是否安装了ssh服务：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1、输入：#ps -e&lt;/td&gt;
      &lt;td&gt;grep ssh 如果服务已经启动，则可以看到“sshd”，否则表示没有安装服务，或没有开机启动&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;2、安装ssh服务，输入命令：#sudo apt-get install openssh-server&lt;/p&gt;

&lt;p&gt;3、启动服务:#/etc/init.d/ssh start&lt;/p&gt;

&lt;p&gt;4、本机测试是否能够成功登录：#ssh -l 用户名 本机ip&lt;/p&gt;

&lt;p&gt;5、用远程工具进行远程连接，若拒接访问，则关闭防火墙或允许22端口&lt;/p&gt;

&lt;h2 id=&quot;input-method&quot;&gt;Input Method&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install ibus-googlepinyin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;重启添加输入法.&lt;/p&gt;

&lt;p&gt;reboot and come to choose&lt;a href=&quot;http://jingyan.baidu.com/article/219f4bf7d4a183de442d38f2.html&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当遇到输入的图标消失时:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;killall ibus-daemon #杀死进程
ibus-daemon -d #开启进程
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;然后重启就会出现了。&lt;/p&gt;

&lt;h2 id=&quot;虚拟机上网&quot;&gt;虚拟机上网&lt;/h2&gt;

&lt;p&gt;装好虚拟机上网是最好的，配置方法，&lt;a href=&quot;http://jingyan.baidu.com/article/20095761926c3bcb0721b498.html&quot;&gt;请看&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;具体内容,&lt;a href=&quot;http://jingyan.baidu.com/article/20095761926c3bcb0721b498.html&quot;&gt;more&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(1) 设置主系统的“本地连接”，确保其中的“VMware bridge protocol”前面打了勾&lt;/p&gt;

&lt;p&gt;(2) 设置虚拟机，菜单栏——VM—settings—hardware—networkadapter—选择bridged&lt;/p&gt;

&lt;p&gt;(3) VM下，进入虚拟机的edit—virtual net editor，把VMnet0设置成桥接模式，且连接到以太网。&lt;/p&gt;

&lt;p&gt;(4) 设置ubuntu的Pv4 settings，ip地址与PC的地址在同一个网段，netmask，DNS，Gateway与主机的一样即可。&lt;/p&gt;

&lt;p&gt;(5) 重启网络服务。先断开网络，再重新连接。用ifconfig确认修改。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;遇到eth0没有IP&lt;/code&gt;,在桥接模式下。&lt;a href=&quot;http://bbs.csdn.net/topics/391021327&quot;&gt;solution&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;source-list&quot;&gt;source list&lt;/h2&gt;

&lt;p&gt;碰到一些错误，就记录下来，以便以后使用&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;E:Encountered a section wtih no Package:header&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这是关于Ubuntu源的的问题，直接的方法就是，删除/var/lib/apt/list下所有的文件，重新生成,然后重启。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo rm -rf /var/lib/apt/lists/*
sudo apt-get udpate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;There is no public key available for following key IDS xxxx&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Correct commands line is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 1397BC53640DB551
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://askubuntu.com/questions/766883/there-is-no-public-key-available-for-the-following-key-ids-1397bc53640db551&quot;&gt;more&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;error&quot;&gt;error&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;sudo: add-apt-repository: command not found&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;add-apt-repository 是由 Python-software-properties 这个工具包提供的,先安装python-software-properties 才能使用 add-apt-repository&lt;/p&gt;

&lt;p&gt;apt-get install python-software-properties&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Machine Learn</title>
   <link href="http://lkkandsyf.github.io/2016/12/10/Machine-learn"/>
   <updated>2016-12-10T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/2016/12/10/Machine-learn</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#basic-notion&quot; id=&quot;markdown-toc-basic-notion&quot;&gt;basic notion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;basic-notion&quot;&gt;basic notion&lt;/h2&gt;

&lt;p&gt;随机梯度下降法，最小二乘法的区别&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.ethanrosenthal.com/2016/01/09/explicit-matrix-factorization-sgd-als/&quot;&gt;SGD LMS diff&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Gitbook</title>
   <link href="http://lkkandsyf.github.io/2016/12/04/Gitbook"/>
   <updated>2016-12-04T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/2016/12/04/Gitbook</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#gitbook&quot; id=&quot;markdown-toc-gitbook&quot;&gt;Gitbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;gitbook&quot;&gt;Gitbook&lt;/h2&gt;

&lt;p&gt;Gitbook这是一个编辑文档的好东西,我采用的别人的&lt;a href=&quot;https://hub.docker.com/r/fellah/gitbook/&quot;&gt;docker&lt;/a&gt;,使用起来方便很多。&lt;/p&gt;

&lt;p&gt;帮助命令&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gitbook help
gitbook serve .
# localhost:4000进行访问
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;文档:pdf,html.epub&lt;/p&gt;

&lt;p&gt;生成pdf文档，可以同步到githbu.io上面再生成pdf格式。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GitbookIO/gitbook&quot;&gt;office&lt;/a&gt;
&lt;a href=&quot;http://www.chengweiyang.cn/gitbook/basic-usage/README.html&quot;&gt;basic&lt;/a&gt;
&lt;a href=&quot;http://caibaojian.com/gitbook/&quot;&gt;zh&lt;/a&gt;
&lt;a href=&quot;https://github.com/wwq0327/gitbook-zh&quot;&gt;demo&lt;/a&gt;
&lt;a href=&quot;http://colobu.com/2014/10/09/gitbook-quickstart/&quot;&gt;blog&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Restful</title>
   <link href="http://lkkandsyf.github.io/restful%20api/2016/11/30/Restful"/>
   <updated>2016-11-30T00:00:00+08:00</updated>
   <id>http://lkkandsyf.github.io/restful%20api/2016/11/30/Restful</id>
   <content type="html">
&lt;h1 class=&quot;no_toc&quot; id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;一个通用的框架.python package eve &lt;a href=&quot;http://python-eve.org&quot;&gt;office&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://code.tutsplus.com/tutorials/building-rest-apis-using-eve--cms-22961&quot;&gt;https://code.tutsplus.com/tutorials/building-rest-apis-using-eve–cms-22961&lt;/a&gt;
&lt;a href=&quot;https://docs.mongodb.com/ecosystem/tools/http-interfaces/&quot;&gt;https://docs.mongodb.com/ecosystem/tools/http-interfaces/&lt;/a&gt;
&lt;a href=&quot;http://www.slideshare.net/nicolaiarocci/rest-ap-is-for-humans&quot;&gt;http://www.slideshare.net/nicolaiarocci/rest-ap-is-for-humans&lt;/a&gt;
&lt;a href=&quot;https://www.drud.com/evegenie-python-eve-schema-generation-done-fast/&quot;&gt;https://www.drud.com/evegenie-python-eve-schema-generation-done-fast/&lt;/a&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#restful-api&quot; id=&quot;markdown-toc-restful-api&quot;&gt;Restful API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;restful-api&quot;&gt;Restful API&lt;/h2&gt;
</content>
 </entry>
 
 
</feed>
