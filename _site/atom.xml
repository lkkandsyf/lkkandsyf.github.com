<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>liangkangkang's Blog</title>
 <link href="" rel="self"/>
 <link href=""/>
 <updated>2018-06-12T21:03:35+08:00</updated>
 <id></id>
 <author>
   <name>liangkangkang</name>
   <email>lkkforworld@gmail.com</email>
 </author>

 
 <entry>
   <title>拓扑发现窥探</title>
   <link href="/network/2018/06/02/topology_discovery"/>
   <updated>2018-06-02T00:00:00+08:00</updated>
   <id>/network/2018/06/02/topology_discovery</id>
   <content type="html">&lt;p&gt;在网络中需要用拓扑发现来展示真实的网络，尤其是在很复杂的网络中，显得尤为重要，所有出现了一系列的算法。传统的都是基于SNMP协议来获取网络设备的数据，通过分析得到网络关系图。&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;arproute表-算法&quot;&gt;ARP+ROUTE表 算法&lt;/h2&gt;

</content>
 </entry>
 
 <entry>
   <title>zabbix monitor 到底有多神秘?</title>
   <link href="/zabbix/2018/05/02/zabbix"/>
   <updated>2018-05-02T00:00:00+08:00</updated>
   <id>/zabbix/2018/05/02/zabbix</id>
   <content type="html">&lt;p&gt;当网络设备达到一定量的时候，就需要一个有效的监控的工具，来管理它们，并可以知道当前的工作状态。zabbix就能胜任，也是监控领域的一大利器。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;http://lkkandsyf.github.com/pictures/zabbix-demo.png&quot; alt=&quot;zabbix&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;背景介绍&quot;&gt;背景介绍&lt;/h2&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;

&lt;h2 id=&quot;使用&quot;&gt;使用&lt;/h2&gt;

&lt;h2 id=&quot;problem&quot;&gt;problem&lt;/h2&gt;

&lt;h2 id=&quot;reference&quot;&gt;reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zabbix.com/documentation&quot;&gt;https://www.zabbix.com/documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/clsn/p/7885990.html&quot;&gt;https://www.cnblogs.com/clsn/p/7885990.html&lt;/a&gt; Zabbix 3.0 从入门到精通&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>collect some song in the life</title>
   <link href="/song/2018/05/01/song"/>
   <updated>2018-05-01T00:00:00+08:00</updated>
   <id>/song/2018/05/01/song</id>
   <content type="html">&lt;h2 id=&quot;to-remind-in-the-life&quot;&gt;to remind in the life&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://lkkandsyf.github.com/pictures/life-song.jpg&quot; alt=&quot;love&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;不仅仅是喜欢&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>在网络安全中，深度学习该怎样发挥出它的巨大威力</title>
   <link href="/dl/2018/05/01/dl-network"/>
   <updated>2018-05-01T00:00:00+08:00</updated>
   <id>/dl/2018/05/01/dl-network</id>
   <content type="html">&lt;p&gt;当我们熟悉了算法之后，对训练的数据，进行测试，验证自己的方案，但是大部分情况下，主要是缺少数据，还有对数据特征收集。&lt;a href=&quot;http://www.secrepo.com/&quot;&gt;[secrepo.com]&lt;/a&gt;,这里收集了大量的机器学习和网络安全相关的数据源，也提供免费的下载，这也是福利，数据来自两个部分：网络自己和第三方，内容包括互联网扫描数据，恶意软件源码，以及和网络安全相关的系统日志。&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;paper&quot;&gt;paper&lt;/h2&gt;

&lt;h2 id=&quot;books&quot;&gt;books&lt;/h2&gt;

&lt;h2 id=&quot;speech&quot;&gt;speech&lt;/h2&gt;

&lt;h2 id=&quot;project&quot;&gt;project&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://clicksecurity.github.io/data_hacking/&quot;&gt;[http://clicksecurity.github.io/data_hacking/]&lt;/a&gt; Examples of using IPython, Pandas, and Scikit Learn to get the most out of your security data.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kdnuggets.com/2017/01/machine-learning-cyber-security.html&quot;&gt;https://www.kdnuggets.com/2017/01/machine-learning-cyber-security.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.leiphone.com/news/201701/RdVHBwh9y0kuvTGJ.html&quot;&gt;https://www.leiphone.com/news/201701/RdVHBwh9y0kuvTGJ.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Netty 高性能RPC框架</title>
   <link href="/netty/2018/04/30/netty"/>
   <updated>2018-04-30T00:00:00+08:00</updated>
   <id>/netty/2018/04/30/netty</id>
   <content type="html">&lt;p&gt;在网络通信方向，主要涉及到客户端和服务端，现在使用最多就是netty。
&lt;a href=&quot;http://netty.io/&quot;&gt;[http://netty.io/]&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;netty-is-an-asynchronous-event-driven-network-application-framework-for-rapid-development-of-maintainable-high-performance-protocol-servers--clients&quot;&gt;Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp;amp; clients.&lt;/h2&gt;

&lt;!--more--&gt;

&lt;p&gt;书籍：netty 权威指南，netty 实战&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>love you like you do</title>
   <link href="/song/2018/04/29/love_me_you_like_do"/>
   <updated>2018-04-29T00:00:00+08:00</updated>
   <id>/song/2018/04/29/love_me_you_like_do</id>
   <content type="html">&lt;p&gt;Love Me Like You Do&lt;/p&gt;

&lt;p&gt;You’re the light you’re the night&lt;/p&gt;

&lt;p&gt;You’re the color of my blood&lt;/p&gt;

&lt;p&gt;You’re the cure you’re the pain&lt;/p&gt;

&lt;p&gt;You’re the only thing I wanna toch&lt;/p&gt;

&lt;p&gt;Never knew that it could mean so much so much&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://lkkandsyf.github.com/pictures/guan.png&quot; alt=&quot;shade&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;http://v.yinyuetai.com/video/2225036&quot;&gt;[mv]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://lkkandsyf.github.com/pictures/dance.png&quot; alt=&quot;love&quot; /&gt;
&lt;img src=&quot;http://lkkandsyf.github.com/pictures/fifty-shade.png&quot; alt=&quot;love&quot; /&gt;
&lt;img src=&quot;http://lkkandsyf.github.com/pictures/sea.png&quot; alt=&quot;love&quot; /&gt;
&lt;img src=&quot;http://lkkandsyf.github.com/pictures/two-hand.png&quot; alt=&quot;love&quot; /&gt;
&lt;img src=&quot;http://lkkandsyf.github.com/pictures/song.png&quot; alt=&quot;love&quot; /&gt;
&lt;img src=&quot;http://lkkandsyf.github.com/pictures/cc.png&quot; alt=&quot;love&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>sql engine base on Hbase on hadoop</title>
   <link href="/big-data/2018/04/25/phoenix"/>
   <updated>2018-04-25T00:00:00+08:00</updated>
   <id>/big-data/2018/04/25/phoenix</id>
   <content type="html">&lt;hr /&gt;

&lt;!--more--&gt;

</content>
 </entry>
 
 <entry>
   <title>整理一些必要的书籍，可以快速的找到和阅读</title>
   <link href="/books/2018/04/25/collect_books"/>
   <updated>2018-04-25T00:00:00+08:00</updated>
   <id>/books/2018/04/25/collect_books</id>
   <content type="html">&lt;p&gt;当书籍越来越多的时候，往往不太好找，整理到一起了，就可以节省很多的时间，提高效率。&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;big-data&quot;&gt;big-data&lt;/h1&gt;

&lt;h2 id=&quot;hadoop&quot;&gt;hadoop&lt;/h2&gt;

&lt;h2 id=&quot;kafka&quot;&gt;kafka&lt;/h2&gt;

&lt;h2 id=&quot;zookeeper&quot;&gt;zookeeper&lt;/h2&gt;

&lt;h2 id=&quot;hive&quot;&gt;hive&lt;/h2&gt;

&lt;h2 id=&quot;spark&quot;&gt;spark&lt;/h2&gt;

&lt;h2 id=&quot;flink&quot;&gt;flink&lt;/h2&gt;

&lt;h2 id=&quot;hbase&quot;&gt;hbase&lt;/h2&gt;

&lt;h2 id=&quot;flume&quot;&gt;flume&lt;/h2&gt;

&lt;h1 id=&quot;ml-dl&quot;&gt;ML-DL&lt;/h1&gt;

&lt;h2 id=&quot;neural-network&quot;&gt;neural-network&lt;/h2&gt;

&lt;h2 id=&quot;machine-learning&quot;&gt;machine-learning&lt;/h2&gt;

&lt;h2 id=&quot;deep-learning&quot;&gt;deep-learning&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pan.baidu.com/s/17u4frNm3nPPBx0IkOB5cwg&quot;&gt;[long short term memory networks with python]&lt;/a&gt; soci&lt;/li&gt;
  &lt;li&gt;2018 最新的深度学习书籍，有中文版,&lt;a href=&quot;http://www.deeplearningbook.org/&quot;&gt;http://www.deeplearningbook.org/&lt;/a&gt;,相关博客,&lt;a href=&quot;https://exacity.github.io/deeplearningbook-chinese/&quot;&gt;https://exacity.github.io/deeplearningbook-chinese/&lt;/a&gt;,&lt;a href=&quot;https://github.com/exacity/deeplearningbook-chinese&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;computer&quot;&gt;computer&lt;/h1&gt;

&lt;h2 id=&quot;os&quot;&gt;os&lt;/h2&gt;
</content>
 </entry>
 
 <entry>
   <title>keras deep learning a strong tool</title>
   <link href="/deep-learning/2018/04/23/Keras"/>
   <updated>2018-04-23T00:00:00+08:00</updated>
   <id>/deep-learning/2018/04/23/Keras</id>
   <content type="html">&lt;hr /&gt;

&lt;!--more--&gt;

</content>
 </entry>
 
 <entry>
   <title>RNN Recurrent Nerual Networks</title>
   <link href="/2018/04/21/RNN"/>
   <updated>2018-04-21T00:00:00+08:00</updated>
   <id>/2018/04/21/RNN</id>
   <content type="html">&lt;p&gt;人类并不是每时每刻都从一片空白的大脑开始他们的思考。在你阅读这篇文章时候，你都是基于自己已经拥有的对先前所见词的理解来推断当前词的真实含义。我们不会将所有的东西都全部丢弃，然后用空白的大脑进行思考。我们的思想拥有持久性。&lt;/p&gt;

&lt;p&gt;传统的神经网络并不能做到这点，看起来也像是一种巨大的弊端。例如，假设你希望对电影中的每个时间点的时间类型进行分类。传统的神经网络应该很难来处理这个问题——使用电影中先前的事件推断后续的事件。
RNN 解决了这个问题。RNN 是包含循环的网络，允许信息的持久化。&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;p&gt;Reference&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://karpathy.github.io/2015/05/21/rnn-effectiveness/&quot;&gt;http://karpathy.github.io/2015/05/21/rnn-effectiveness/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>LSTM</title>
   <link href="/2018/04/21/LSTM"/>
   <updated>2018-04-21T00:00:00+08:00</updated>
   <id>/2018/04/21/LSTM</id>
   <content type="html">&lt;p&gt;LSTM&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;p&gt;LSTM&lt;/p&gt;

&lt;p&gt;Reference&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nicodjimenez/lstm&quot;&gt;https://github.com/nicodjimenez/lstm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/guillaume-chevalier/LSTM-Human-Activity-Recognition&quot;&gt;https://github.com/guillaume-chevalier/LSTM-Human-Activity-Recognition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/HendrikStrobelt/LSTMVis&quot;&gt;https://github.com/HendrikStrobelt/LSTMVis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/junhyukoh/caffe-lstm&quot;&gt;https://github.com/junhyukoh/caffe-lstm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;lstm char cnn tensorflow demo:
&lt;a href=&quot;https://github.com/carpedm20/lstm-char-cnn-tensorflow&quot;&gt;https://github.com/carpedm20/lstm-char-cnn-tensorflow&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>apache ignite Database and Caching Platfrom </title>
   <link href="/memory/2018/01/16/ignite"/>
   <updated>2018-01-16T00:00:00+08:00</updated>
   <id>/memory/2018/01/16/ignite</id>
   <content type="html">&lt;hr /&gt;
&lt;p&gt;memory-centric mutil-model distributed&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;初探&quot;&gt;初探&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ignite.apache.org/&quot;&gt;office&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/liyuj/note/230739&quot;&gt;中文翻译手册&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;使用&quot;&gt;使用&lt;/h2&gt;

&lt;h2 id=&quot;技术总结&quot;&gt;技术总结&lt;/h2&gt;
</content>
 </entry>
 
 <entry>
   <title>geode</title>
   <link href="/2018/01/16/geode"/>
   <updated>2018-01-16T00:00:00+08:00</updated>
   <id>/2018/01/16/geode</id>
   <content type="html">&lt;hr /&gt;

&lt;!--more--&gt;

</content>
 </entry>
 
 <entry>
   <title>cache</title>
   <link href="/2018/01/16/distribute-memory-cache"/>
   <updated>2018-01-16T00:00:00+08:00</updated>
   <id>/2018/01/16/distribute-memory-cache</id>
   <content type="html">&lt;hr /&gt;

&lt;!--more--&gt;

</content>
 </entry>
 
 <entry>
   <title>进程监控web工具supverisor</title>
   <link href="/2018/01/10/supervisor"/>
   <updated>2018-01-10T00:00:00+08:00</updated>
   <id>/2018/01/10/supervisor</id>
   <content type="html">&lt;p&gt;对于大型的平台，多个服务运行，需要一个工具来有效监控进程，Supverisor: A Process Control System，一个开源的工具，简单又好用&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;p&gt;superviso&lt;/p&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;安装教程到官网&lt;a href=&quot;http://supervisord.org/&quot;&gt;http://supervisord.org/&lt;/a&gt;按照步骤，就可以了,这是一个python的工具，可以使用pip来安装。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;supervisor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upgrade&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pypi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;douban&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trusted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pypi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;douban&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;添加配置文件&quot;&gt;添加配置文件&lt;/h3&gt;
&lt;p&gt;安装完成supervisor之后，通过echo_supervisord_conf来生成配置文件,例如&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;$echo_supervisord_conf
; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion (&quot;~&quot; or &quot;$HOME&quot;) is not supported.  Environment
;    variables can be expanded using this syntax: &quot;%(ENV_HOME)s&quot;.
;  - Quotes around values are not supported, except in the case of
;    the environment= options as shown below.
;  - Comments must have a leading space: &quot;a=b ;comment&quot; not &quot;a=b;comment&quot;.
;  - Command will be truncated if it looks like a config file comment, e.g.
;    &quot;command=bash -c 'foo ; bar'&quot; will truncate to &quot;command=bash -c 'foo &quot;.

[unix_http_server]
file=/tmp/supervisor.sock   ; the path to the socket file
;chmod=0700                 ; socket file mode (default 0700)
;chown=nobody:nogroup       ; socket file uid:gid owner
;username=user              ; default is no username (open server)
;password=123               ; default is no password (open server)

;[inet_http_server]         ; inet (TCP) server disabled by default
;port=127.0.0.1:9001        ; ip_address:port specifier, *:port for all iface
;username=user              ; default is no username (open server)
;password=123               ; default is no password (open server)

[supervisord]
logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200
;umask=022                   ; process file creation umask; default 022
;user=chrism                 ; default is current user, required if root
;identifier=supervisor       ; supervisord identifier, default is 'supervisor'
;directory=/tmp              ; default is not to cd during start
;nocleanup=true              ; don't clean up tempfiles at start; default false
;childlogdir=/tmp            ; 'AUTO' child log dir, default $TEMP
;environment=KEY=&quot;value&quot;     ; key value pairs to add to environment
;strip_ansi=false            ; strip ansi escape codes in logs; def. false

; The rpcinterface:supervisor section must remain in the config file for
; RPC (supervisorctl/web interface) to work.  Additional interfaces may be
; added by defining them in separate [rpcinterface:x] sections.

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; The supervisorctl section configures how supervisorctl will connect to
; supervisord.  configure it match the settings in either the unix_http_server
; or inet_http_server section.

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=chris              ; should be same as in [*_http_server] if set
;password=123                ; should be same as in [*_http_server] if set
;prompt=mysupervisor         ; cmd line prompt (default &quot;supervisor&quot;)
;history_file=~/.sc_history  ; use readline history if available

; The sample program section below shows all possible program subsection values.
; Create one or more 'real' program: sections to be able to control them under
; supervisor.

;[program:theprogramname]
;command=/bin/cat              ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=999                  ; the relative start priority (default 999)
;autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
;startretries=3                ; max # of serial start failures when starting (default 3)
;autorestart=unexpected        ; when to restart if exited after running (def: unexpected)
;exitcodes=0,2                 ; 'expected' exit codes used with autorestart (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false             ; send stop signal to the UNIX process group (default false)
;killasgroup=false             ; SIGKILL the UNIX process group (def false)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A=&quot;1&quot;,B=&quot;2&quot;       ; process environment additions (def no adds)
;serverurl=AUTO                ; override serverurl computation (childutils)

; The sample eventlistener section below shows all possible eventlistener
; subsection values.  Create one or more 'real' eventlistener: sections to be
; able to handle event notifications sent by supervisord.

;[eventlistener:theeventlistenername]
;command=/bin/eventlistener    ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
;events=EVENT                  ; event notif. types to subscribe to (req'd)
;buffer_size=10                ; event buffer queue size (default 10)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=-1                   ; the relative start priority (default -1)
;autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
;startretries=3                ; max # of serial start failures when starting (default 3)
;autorestart=unexpected        ; autorestart if exited after running (def: unexpected)
;exitcodes=0,2                 ; 'expected' exit codes used with autorestart (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false             ; send stop signal to the UNIX process group (default false)
;killasgroup=false             ; SIGKILL the UNIX process group (def false)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=false         ; redirect_stderr=true is not allowed for eventlisteners
;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A=&quot;1&quot;,B=&quot;2&quot;       ; process environment additions
;serverurl=AUTO                ; override serverurl computation (childutils)

; The sample group section below shows all possible group values.  Create one
; or more 'real' group: sections to create &quot;heterogeneous&quot; process groups.

;[group:thegroupname]
;programs=progname1,progname2  ; each refers to 'x' in [program:x] definitions
;priority=999                  ; the relative start priority (default 999)

; The [include] section can just contain the &quot;files&quot; setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.

;[include]
;files = relative/directory/*.ini
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://supervisord.org/configuration.html#programx-section&quot;&gt;more_info&lt;/a&gt;
注释符号为;,根据自己的需求修改配置文件,生成配置文件&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;echo_supervisord_conf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;supervisord_conf&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;demo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;supervisord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;supervisord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logfile_maxbytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logfile_backups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;loglevel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pidfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;supervisord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nodaemon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;minfds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;minprocs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;umask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;022&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chrism&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;identifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;supervisor&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nocleanup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;childlogdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;strip_ansi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KEY1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;value1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KEY2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;value2&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;启动supervisor&quot;&gt;启动supervisor&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;supervisord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;supervisord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;通过web页面(localhost:9001)就可以访问了&lt;/p&gt;

&lt;h3 id=&quot;更新配置到supervisor&quot;&gt;更新配置到supervisor&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;supervisorctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;重新启动配置中的所有程序&quot;&gt;重新启动配置中的所有程序&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;supervisorctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;查看正在守护的进程&quot;&gt;查看正在守护的进程&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;supervisorctl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;停止全部进程&quot;&gt;停止全部进程&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;supervisorctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;启动某个进程&quot;&gt;启动某个进程&lt;/h3&gt;

&lt;p&gt;program_name=在配置文件中写的程序名称&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;supervisorctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;program_name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;重启某个进程&quot;&gt;重启某个进程&lt;/h3&gt;

&lt;p&gt;program_name=在配置文件中写的程序名称&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;supervisorctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;restart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;program_name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;监视进程&quot;&gt;监视进程&lt;/h2&gt;

&lt;h3 id=&quot;添加一个进程&quot;&gt;添加一个进程&lt;/h3&gt;

&lt;p&gt;官网配置文件&lt;a href=&quot;http://supervisord.org/configuration.html#programx-section&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;process_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;program_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numprocs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;umask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;022&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;priority&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;autostart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;autorestart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unexpected&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;startsecs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;startretries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;exitcodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stopsignal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TERM&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stopwaitsecs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stopasgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;killasgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chrism&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;redirect_stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stdout_logfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stdout_logfile_maxbytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stdout_logfile_backups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stdout_capture_maxbytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stdout_events_enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stderr_logfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stderr_logfile_maxbytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stderr_logfile_backups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stderr_capture_maxbytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MB&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stderr_events_enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;serverurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AUTO&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;写一个python程序task.py,不停的写入日志文件&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/python&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/root/log.log&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;write_log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;echo &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;write_log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在supervisord运行 起来之后，添加要管理的进程的配置文件，在supervisord的配置文件中，通过include的方式把&lt;code class=&quot;highlighter-rouge&quot;&gt;不同的程序(组)&lt;/code&gt;写到不同的配置文件中&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;[include]
files = /etc/supervisor/*.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在/etc/supervisor/目录下创建一个task.conf文件，内容如下&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;[program:task]
;directory = /root				;程序启动目录
command=/root/task.py
user=root					;以哪个用户来启动程序
numprocs=1
autostart=true					;在supervisor启动时也启动
autorestart=true
process_name=%(program_name)s			;程序文件名
startsecs=5
startretries=3					;启动失败自动重试次数,默认是3
stopsignal=TERM
stopasgroup=true
killasgroup=true
exitcodes=1,2
stdout_logfile=/root/task.log
stderr_logfile=/root/task.err
stdout_logfile_maxbytes=20MB
stdout_logfile_backups=5
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=5
;通过environment 来添加需要的环境变量，常见的用法是修改PYTHONPATH
;environment=PYTHONPATH=$PYTHONPATH:/path/to/somewhere
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置完成之后，重新运行&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;supervisorctl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这时，再刷新浏览器就可以看到添加的任务了&lt;/p&gt;

&lt;p&gt;除了单个进程的控制，还可以配置 group，进行分组管理。&lt;/p&gt;

&lt;p&gt;经常查看日志文件，包括 supervisord 的日志和各个 pragram 的日志文件，程序 crash 或抛出异常的信息一半会输出到 stderr，可以查看相应的日志文件来查找问题。&lt;/p&gt;
&lt;h2 id=&quot;异常问题&quot;&gt;异常问题&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Error:Another program already listening to a port that one of our HTTP servers is configured to use,Shut this program down first before starting&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;解决方案：由于supverisor 在启动时，会建立一个文件，只要删除了就可以了&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;$find / -name supverisor.sock
$unlink /tmp/supervisor.sock
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>window 常用的开发工具</title>
   <link href="/2017/08/22/win_tool"/>
   <updated>2017-08-22T00:00:00+08:00</updated>
   <id>/2017/08/22/win_tool</id>
   <content type="html">&lt;p&gt;对于一个从Linux转到Window桌面，有些工具用的不是很熟，所以做了一个简单的整理，便于以后查看&lt;/p&gt;

&lt;hr /&gt;
&lt;!--more--&gt;

&lt;h2 id=&quot;cgywin&quot;&gt;Cgywin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cygwin.com/&quot;&gt;Cgywin&lt;/a&gt;,get that Linux feeling - on Windows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/transcode-open/apt-cyg&quot;&gt;apt-cyg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/zhang-pengcheng/p/4156582.html&quot;&gt;ref&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;window-shell&quot;&gt;window shell&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://babun.github.io/&quot;&gt;babun&lt;/a&gt;,Babun - a window shell you love,解压出来，直接运行bat，等待安装，之后就可以使用了，有find,grep,awk,sed等.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.rxna.cn/post/wiki/babun-pei-zhi&quot;&gt;configure&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;babun中文乱码
add code to ~/.babun.rc
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chcp 65001
:wq
source ~/.babunrc
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mamicode.com/info-detail-1653353.html&quot;&gt;ref&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>一个连接各种数据库的软件</title>
   <link href="/2017/08/08/navicat"/>
   <updated>2017-08-08T00:00:00+08:00</updated>
   <id>/2017/08/08/navicat</id>
   <content type="html">&lt;p&gt;Navicat是一套快速、可靠并价格相宜的数据库管理工具，专为简化数据库的管理及降低系统管理成本而设,Navicat是以直觉化的图形用户界面而建的，让你可以以安全并且简单的方式创建、组织、访问并共用信息。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://lkkandsyf.github.com/pictures/navicat_ui.png&quot; alt=&quot;Navicat_UI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Navicat提供多达7种语言供客户选择，被公认为全球最受欢迎的数据库前端用户界面工具。它可以用来对本机或远程的 MySQL、SQL Server、SQLite、Oracle及PostgreSQL数据库进行管理及开发。&lt;/p&gt;

&lt;p&gt;Navicat的功能足以符合专业开发人员的所有需求，而且对数据库服务器的新手来说又相当容易学习。有了极完备的图形用户界面(GUI)，Navicat让你可以以安全且简单的方法创建、组织、访问和共享信息。&lt;/p&gt;

&lt;p&gt;Navicat适用于三种平台-Microsoft Windows、Mac OS X及Linux。它可以让用户连接到任何本机或远程服务器、提供一些实用的数据库工具如数据模型、数据传输、数据同步、结构同步、导入、导出、备份、还原、报表创建工具及计划以协助管理数据。&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;

&lt;p&gt;从百度网盘中的software中心，找到navicat的安装软件包。接下来就按照下面的步骤开始：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://lkkandsyf.github.com/pictures/navicat_install.png&quot; alt=&quot;install&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;note&lt;/code&gt;:注意补丁的安装，只有先安装了补丁，才能正确运行Navicat.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>夜的钢琴曲5感想</title>
   <link href="/2017/06/21/night-piano"/>
   <updated>2017-06-21T00:00:00+08:00</updated>
   <id>/2017/06/21/night-piano</id>
   <content type="html">&lt;p&gt;一首好的曲子，代表了不朽的故事，时刻地启迪着自己,不忘脚下的路以及遥远的天边。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://lkkandsyf.github.com/pictures/miss.png&quot; alt=&quot;miss&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;http://www.xiami.com/song/1769819218&quot;&gt;[夜的钢琴曲5]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;感想：
一样的歌曲，不同的人听却有不同的感受。然而，什么样的歌让你听了，才会让你有一种百听不厌，在喧闹的现实社会中静下心来，有感而发，整天想对它进行单曲循环呢？我觉得这样的歌，所表达的内容必定是与你曾经有过类似经历，又再次勾起你对往事美好回忆或者使你想起影响你最深的事情的歌。而石进的这首《夜的钢琴五》正好有这种功效，听着他的这首歌让我的心情得到释然，心灵找到了诗意的栖息地。一架钢琴，一个人的夜。记录生活的方式有多种。有人用文字，有人用摄影，有人用述说。但作者用音乐这种方式来记录生活，所展现出来的内容却感动了我，这音乐让我们知道，失去的日子，我们都需要回忆，适时我们都需要宁静,听着这歌曲，会让你觉得，每一首曲子的背后，都或多或少有一个小故事，不同的人听后脑海里就会浮现出自己的小故事。&lt;/p&gt;

&lt;p&gt;它仿佛表达着一种爱与被爱不能相守到永久的爱情，有着一股淡淡的忧伤——给不了你需要的爱，还不清我欠你的情。怎么算成全，你问我，我也很想知道；不是我，能救赎了这世，不是我，能圆你的梦想。缘由天定，情由心生，因为懂，所以残酷；音如凤，字如凰，如果你，也能如我这般沉静，若是孤影便展开双翼，若是倾情便自断了一翅；怎么飞，都能到天堂，不要给我怨恨，也不要给我原谅；隔着玻璃障，你和我，何曾际遇过，不要以我和你的爱为敌；求与不予，恨与不堪，有时候，都是无辜。没有永生放不下的感情，没有永生化解不了的难和劫，为了我，学着释怀；惟此，许多年后思及，你和我才能感到感激，感激能在最美的年华遇到你，感激能与你一起分享我最美的年华。你见过我的笑容，我见过你泪眼，纵然聚散匆匆，这依然是我生命中的幸运。&lt;/p&gt;

&lt;p&gt;如果一定要把它写成一首有词的歌，我觉得歌词应该这样写，才能把这首曲子的意思表达得透切：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;爱的那么痛
爱的那么深
依然没结果
爱的那么痛
爱的那么深
依然没结果
初次遇见你
我就喜欢上你
希望你能够
来到我身边
相逢的欢乐
寂静的相依
都在回忆里
曾经的欢乐
曾经的欢笑
都已远去了
曾经的欢乐
曾经的欢笑
都已远去
初次遇见你
我就喜欢上你
陪你走进了
那片枫叶林
重逢的秋夜
寂静的相依
那片枫叶林
无论你在哪
无论你爱谁
我都思念你
无论你在哪
无论你爱谁
在这寂静的夜
思念似月光
希望能有一天
希望你能够
回到我的身边
爱得没结果
寂静地思念
希望你快乐
爱得没结果
寂静地思念
希望你快乐
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一边听着这轻音乐，一边看着这歌词对号入座，跟随它的旋律，跟着它的步骤，仿佛自己身临其境，向往着爱，一股股心酸与想挽留的感觉油然而生，正是这样的歌才会让人陷入沉思当中，心慢慢的静下来，让人思索万千，让人想到
以前所发生的事情，不管是快乐的还是不快乐的，都过去了，但是我们不会忘记那些伤害、那些历史，因为忘记历史就意味着背叛，我们会做到处变不惊。&lt;/p&gt;

&lt;p&gt;它又仿佛表达着这样一种艰辛追求爱的情景——收到的信件，焚烧在墙角，纷纷随风散。燃烧的喜悦，泣血的情孽，月光星灿烂。是因为人们在陆续的下陷，看不见的是无停的时间。辗转的无眠，无尽的黑夜，皎洁的月倩。&lt;/p&gt;

&lt;p&gt;这只空信封，是这个世间，最美的怀念。心中的思念，哪能得悠闲，飘飘的苦恋。那一丝丝的痛苦思念，都暴发在这沉重的夜里面。爱恨伯仲间，置身于泪水，萤火虫祭奠。明白不胆怯，全都是今夜，心中的思念。倦鸟相依偎，顾影
独婉惜，是对谁的迷恋？那一丝丝的痛苦思念，都暴发在这沉重的夜里面。爱恨皆走远，发丝遮双眸，星辰如霓冠。萤火虫寻觅，有匪夷的疯癫，全都是今天。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;这娓娓道来的曲调，清新又不随波逐流
心中仿佛下了一场烟雨
漫过枯涸喑哑的边丘
缓缓留下明暗的露水线
如同吹起晚暮的海风，拍打不肯沉寂的贝壳
冲上岸头或是随波而下
都将成为过目不忘的风景
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这首&lt;code class=&quot;highlighter-rouge&quot;&gt;夜的钢琴曲五&lt;/code&gt;像一股清泉注入了我的心灵，使我浮躁的心渐渐归于平静，更好的去思考人生，以及活着的意义。为了达到心灵的安定与充实，最好的途径就是学习智慧和修正行为，利人利己。人因思考而伟大，所以我提升自己思
考的质量，也许在将来的某一天也会成为一个伟大的人!&lt;/p&gt;

&lt;p&gt;仔细聆听石进的《夜的钢琴曲五》，你会感觉，曲子里充满了忧伤，仿佛溪流，仿佛海风，仿佛忧伤划过安静；会让你感觉，拥有过便是一生的幸福，如若相逢无法拉长到一生，不如在还在一起的晚上，听这首钢琴曲，划过心弦，静静
相思，静静遗忘。听着这静谧舒缓的曲子，让自己的心灵诗意地栖息。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;欲相守,难相望,人各天涯愁断肠；
爱易逝,恨亦长,灯火阑珊人彷徨；
行千山,涉万水,相思路上泪两行；
春花开,秋叶落,繁华过后留残香；
望长空,叹明月,形单影只心惆怅；
酒意浓,心亦醉,罗衫轻袖舞飞扬；
思秋水,念伊人,咫尺天涯媲鸳鸯；
前世情,今生债,红尘轮回梦一场.
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>nmap使用手册</title>
   <link href="/2017/06/19/nmap"/>
   <updated>2017-06-19T00:00:00+08:00</updated>
   <id>/2017/06/19/nmap</id>
   <content type="html">&lt;p&gt;Nmap是一款网络扫描和主机检测的工具，可以用来作为一个漏洞探测器或网络安全扫描器，而且还是跨平台的.&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;基本手册&quot;&gt;基本手册&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tuicool.com/articles/6RzIZr3&quot;&gt;nmap速查手册&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nmap.com.cn/doc/manual.shtm&quot;&gt;nmap中文手册&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nmap.org/man/zh/&quot;&gt;nmap参考指南&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wenku.baidu.com/view/db46540f0c22590103029d16.html&quot;&gt;nmap简单使用&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>在Centos7上安装和配置VNC服务</title>
   <link href="/centos/2017/06/16/vnc"/>
   <updated>2017-06-16T00:00:00+08:00</updated>
   <id>/centos/2017/06/16/vnc</id>
   <content type="html">&lt;p&gt;当我们访问服务器时，大部分都是通过ssh来操作的。很少用到图形界面，毕竟在字符界面就可以完成我们的任务了，只是图形界面看起来会好一点，所以就通过VNC服务和控制器VNC-Viewer来实现这一愿望。VNC(Virtual Network Computing)允许Linux系统可以类似实现像Windows中的远程桌面访问那样访问Linux桌面。&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;p&gt;这里是在Centos7系统是进行实验的。&lt;/p&gt;

&lt;h2 id=&quot;安装vnc&quot;&gt;安装VNC&lt;/h2&gt;

&lt;p&gt;首先看看本机上是否已经安装VNC&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;$rpm -q tigervnc tigervnc-server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装VNC Server&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;sudo yum check-update
sudo yum install tigervnc-server  tigervnc-server-module -y
sudo unlink /etc/systemd/system/default.target
sudo ln -sf /lib/systemd/system/graphical.target /etc/systemd/system/default.target
sudo reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;配置vnc&quot;&gt;配置VNC&lt;/h2&gt;

&lt;p&gt;1.拷贝配置文件&lt;/p&gt;

&lt;p&gt;我们需要在 /etc/systemd/system/ 目录里创建一个配置文件。我们可以将 /lib/systemd/sytem/vncserver@.service 拷贝一份配置文件范例过来。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;sudo cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service
sudo systemctl enable vncserver@:1.service
sudo systemctl start vncserver@:1.service
systemctl status vncserver@:1.service
# open configure file and add user
vim /etc/systemd/system/vncserver@:1.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里使用的用户名为lkk&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;# The vncserver service unit file
#
# Quick HowTo:
# 1. Copy this file to /etc/systemd/system/vncserver@.service
# 2. Edit /etc/systemd/system/vncserver@.service, replacing &amp;lt;USER&amp;gt;
#    with the actual user name. Leave the remaining lines of the file unmodified
#    (ExecStart=/usr/sbin/runuser -l &amp;lt;USER&amp;gt; -c &quot;/usr/bin/vncserver %i&quot;
#     PIDFile=/home/&amp;lt;USER&amp;gt;/.vnc/%H%i.pid)
# 3. Run `systemctl daemon-reload`
# 4. Run `systemctl enable vncserver@:&amp;lt;display&amp;gt;.service`
#
# DO NOT RUN THIS SERVICE if your local area network is
# untrusted!  For a secure way of using VNC, you should
# limit connections to the local host and then tunnel from
# the machine you want to view VNC on (host A) to the machine
# whose VNC output you want to view (host B)
#
# [user@hostA ~]$ ssh -v -C -L 590N:localhost:590M hostB
#
# this will open a connection on port 590N of your hostA to hostB's port 590M
# (in fact, it ssh-connects to hostB and then connects to localhost (on hostB).
# See the ssh man page for details on port forwarding)
#
# You can then point a VNC client on hostA at vncdisplay N of localhost and with
# the help of ssh, you end up seeing what hostB makes available on port 590M
#
# Use &quot;-nolisten tcp&quot; to prevent X connections to your VNC server via TCP.
#
# Use &quot;-localhost&quot; to prevent remote VNC clients connecting except when
# doing so through a secure tunnel.  See the &quot;-via&quot; option in the
# `man vncviewer' manual page.


[Unit]
Description=Remote desktop service (VNC)
After=syslog.target network.target

[Service]
Type=forking
# Clean any existing files in /tmp/.X11-unix environment
ExecStartPre=/bin/sh -c '/usr/bin/vncserver -kill %i &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 || :'
ExecStart=/usr/sbin/runuser -l lkk -c &quot;/usr/bin/vncserver %i&quot;
PIDFile=/home/lkk/.vnc/%H%i.pid
ExecStop=/bin/sh -c '/usr/bin/vncserver -kill %i &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 || :'

[Install]
WantedBy=multi-user.target

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.设置密码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;sudo vncpasswd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3.开启服务&lt;/p&gt;

&lt;p&gt;永久开启服务&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;$ sudo systemctl enable vncserver@:1.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;启动服务&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;$ sudo systemctl start vncserver@:1.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~/.vnc/xstartup&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;#!/bin/sh

unset SESSION_MANAGER
unset DBUS_SESSION_BUS_ADDRESS
exec /etc/X11/xinit/xinitrc
#[-x /etc/vnc/xstartup]］&amp;amp;&amp;amp; exec /etc/vnc/xstartup
[ -r $HOME/.Xresources  ] &amp;amp;&amp;amp; xrdb $HOME/.Xresources
xsetroot -solid grey
vncconfig -iconic &amp;amp;
xterm -gemetry 80x24+10+10 -ls -title &quot;$VNCDESKTOP Desktop&quot; &amp;amp;
＃twm &amp;amp;
gnome-session &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;用vnc客户端连接服务器&quot;&gt;用VNC客户端连接服务器&lt;/h2&gt;

&lt;p&gt;我们可以下载&lt;a href=&quot;https://www.realvnc.com/download/viewer/&quot;&gt;[VNC-Viewer]&lt;/a&gt;来连接配置好的服务器。&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.centoscn.com/image-text/install/2015/0509/5394.html&quot;&gt;http://www.centoscn.com/image-text/install/2015/0509/5394.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://linux.cn/article-5335-1.html&quot;&gt;https://linux.cn/article-5335-1.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/geyalu/article/details/50166953&quot;&gt;http://blog.csdn.net/geyalu/article/details/50166953&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.centoscn.com/image-text/install/2015/0414/5180.html&quot;&gt;http://www.centoscn.com/image-text/install/2015/0414/5180.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/littlemonsters/p/5779331.html&quot;&gt;http://www.cnblogs.com/littlemonsters/p/5779331.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
